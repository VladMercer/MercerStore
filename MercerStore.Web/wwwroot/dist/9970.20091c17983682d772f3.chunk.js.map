{"version":3,"file":"9970.20091c17983682d772f3.chunk.js","mappings":"8LA+BA,QA1BkC,WAC9B,IAAOA,GAAYC,EAAAA,EAAAA,KAAZD,SACDE,GAAWC,EAAAA,EAAAA,MAWjB,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mBAAkBC,SAAC,iBACnCF,EAAAA,EAAAA,MAAA,UAAQC,UAAU,cAAcG,MAAOR,EAAUS,SAR5B,SAACC,GAC1B,IALoBC,IAKJC,SAASF,EAAMG,OAAOL,MAAO,IAJ7CN,GAASY,EAAAA,EAAAA,IAAYH,GAMzB,EAKwFL,SAAA,EAC5EC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,IAAGF,SAAC,OAClBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,KAAIF,SAAC,QACnBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,KAAIF,SAAC,QACnBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,KAAIF,SAAC,YAInC,C,gDC3BaL,EAAsB,WAE/B,IAAMc,GAAaC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASH,UAAU,IAUnE,MAAO,CACHI,UAVaH,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASC,QAAQ,IAW3DC,YAVeJ,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASE,UAAU,IAW/DpB,UAVagB,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASlB,QAAQ,IAW3DqB,YAVeL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASG,UAAU,IAW/DC,WAVcN,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASI,SAAS,IAW7DP,WAAAA,EACAQ,eAXkBP,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASK,aAAa,IAYrEC,UAXaR,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASM,QAAQ,IAY3DC,aAXgBT,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASO,WAAW,IAazE,C","sources":["webpack://mercerstore/./wwwroot/features/categoryPage/components/PageSizeSelectorComponent.jsx","webpack://mercerstore/./wwwroot/features/categoryPage/hooks/useCategoryProducts.jsx"],"sourcesContent":["import {useDispatch} from 'react-redux';\r\nimport React from 'react';\r\nimport {useCategoryProducts} from '../hooks/useCategoryProducts';\r\nimport {setPageSize} from '../redux/categorySlice';\r\n\r\nconst PageSizeSelectorComponent = () => {\r\n    const {pageSize} = useCategoryProducts();\r\n    const dispatch = useDispatch();\r\n\r\n    const changePageSize = (newPageSize) => {\r\n        dispatch(setPageSize(newPageSize));\r\n    };\r\n\r\n    const handlePageSizeChange = (event) => {\r\n        const newSize = parseInt(event.target.value, 10);\r\n        changePageSize(newSize);\r\n    };\r\n\r\n    return (\r\n        <div className=\"input-group mb-3\">\r\n            <span className=\"input-group-text\">Показывать:</span>\r\n            <select className=\"form-select\" value={pageSize} onChange={handlePageSizeChange}>\r\n                <option value=\"9\">9</option>\r\n                <option value=\"15\">15</option>\r\n                <option value=\"30\">30</option>\r\n                <option value=\"45\">45</option>\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageSizeSelectorComponent;","import {useSelector} from 'react-redux';\r\n\r\nexport const useCategoryProducts = () => {\r\n\r\n    const categoryId = useSelector((state) => state.category.categoryId);\r\n    const products = useSelector((state) => state.category.products);\r\n    const pageNumber = useSelector((state) => state.category.pageNumber);\r\n    const pageSize = useSelector((state) => state.category.pageSize);\r\n    const totalPages = useSelector((state) => state.category.totalPages);\r\n    const sortOrder = useSelector((state) => state.category.sortOrder);\r\n    const totalProducts = useSelector((state) => state.category.totalProducts);\r\n    const isLoaded = useSelector((state) => state.category.isLoaded);\r\n    const isPageReset = useSelector((state) => state.category.isPageReset);\r\n\r\n    return {\r\n        products,\r\n        pageNumber,\r\n        pageSize,\r\n        totalPages,\r\n        sortOrder,\r\n        categoryId,\r\n        totalProducts,\r\n        isLoaded,\r\n        isPageReset\r\n    };\r\n};"],"names":["pageSize","useCategoryProducts","dispatch","useDispatch","_jsxs","className","children","_jsx","value","onChange","event","newPageSize","parseInt","target","setPageSize","categoryId","useSelector","state","category","products","pageNumber","totalPages","sortOrder","totalProducts","isLoaded","isPageReset"],"sourceRoot":""}