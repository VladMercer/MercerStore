{"version":3,"file":"9614.2554a6c43754063bb17e.chunk.js","mappings":"kSAwCA,QAnC4B,WACxB,I,EAAAA,GAAiCC,EAAAA,EAAAA,KAA1BC,EAAUF,EAAVE,WAAYC,EAAUH,EAAVG,WACbC,GAAWC,EAAAA,EAAAA,MAEXC,EAAmB,SAACC,GAClBA,EAAgB,GAAKA,GAAiBJ,GACtCC,GAASI,EAAAA,EAAAA,IAAcD,GAE/B,EAEA,OACIE,EAAAA,EAAAA,KAAA,OAAK,aAAW,0BAAyBC,UACrCC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,aAAYF,SAAA,EACtBD,EAAAA,EAAAA,KAAA,MAAIG,UAAS,aAAAC,OAAeX,GAAc,EAAI,WAAa,IAAKQ,UAC5DD,EAAAA,EAAAA,KAAA,KAAGG,UAAU,YAAYE,KAAK,IAAIC,QAAS,WAAF,OAAQT,EAAiBJ,EAAa,EAAE,EAACQ,SAAC,a,EAIlFM,MAAMb,G,omBAAac,KAAI,SAACC,EAAGC,GAAC,OAC7BV,EAAAA,EAAAA,KAAA,MAAYG,UAAS,aAAAC,OAAeX,IAAeiB,EAAI,EAAI,SAAW,IAAKT,UACvED,EAAAA,EAAAA,KAAA,KAAGG,UAAU,YAAYE,KAAK,IAAIC,QAAS,WAAF,OAAQT,EAAiBa,EAAI,EAAE,EAACT,SACpES,EAAI,KAFJA,EAIJ,KAETV,EAAAA,EAAAA,KAAA,MAAIG,UAAS,aAAAC,OAAeX,GAAcC,EAAa,WAAa,IAAKO,UACrED,EAAAA,EAAAA,KAAA,KAAGG,UAAU,YAAYE,KAAK,IAAIC,QAAS,WAAF,OAAQT,EAAiBJ,EAAa,EAAE,EAACQ,SAAC,iBAOvG,C,gDCpCaT,EAAW,WAGpB,IAAMmB,GAAQC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASH,KAAK,IACnDlB,GAAamB,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASrB,UAAU,IAC7DsB,GAAWH,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASC,QAAQ,IACzDrB,GAAakB,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASpB,UAAU,IAC7DsB,GAAYJ,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASE,SAAS,IAC3DC,GAAaL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASG,UAAU,IAC7DC,GAAWN,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASI,QAAQ,IACzDC,GAAcP,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASK,WAAW,IAC/DC,GAAmBR,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASM,gBAAgB,IACzEC,GAAST,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASO,MAAM,IAG3D,MAAO,CACHC,OAHUV,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASQ,KAAK,IAIrDX,MAAAA,EACAlB,WAAAA,EACAsB,SAAAA,EACArB,WAAAA,EACAsB,UAAAA,EACAC,WAAAA,EACAC,SAAAA,EACAC,YAAAA,EACAC,iBAAAA,EACAC,OAAAA,EAER,C","sources":["webpack://mercerstore/./wwwroot/features/Admin/userPage/components/PaginationComponent.jsx","webpack://mercerstore/./wwwroot/features/Admin/userPage/hooks/useUsers.jsx"],"sourcesContent":["import React from 'react';\r\nimport {useUsers} from '../hooks/useUsers';\r\nimport {useDispatch} from 'react-redux';\r\nimport {setPageNumber} from '../redux/userPageSlice';\r\n\r\nconst PaginationComponent = () => {\r\n    const {pageNumber, totalPages} = useUsers();\r\n    const dispatch = useDispatch();\r\n\r\n    const changePageNumber = (newPageNumber) => {\r\n        if (newPageNumber > 0 && newPageNumber <= totalPages) {\r\n            dispatch(setPageNumber(newPageNumber));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <nav aria-label=\"Page navigation example\">\r\n            <ul className=\"pagination\">\r\n                <li className={`page-item ${pageNumber <= 1 ? 'disabled' : ''}`}>\r\n                    <a className=\"page-link\" href=\"#\" onClick={() => changePageNumber(pageNumber - 1)}>\r\n                        Назад\r\n                    </a>\r\n                </li>\r\n                {[...Array(totalPages)].map((_, i) => (\r\n                    <li key={i} className={`page-item ${pageNumber === i + 1 ? 'active' : ''}`}>\r\n                        <a className=\"page-link\" href=\"#\" onClick={() => changePageNumber(i + 1)}>\r\n                            {i + 1}\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n                <li className={`page-item ${pageNumber >= totalPages ? 'disabled' : ''}`}>\r\n                    <a className=\"page-link\" href=\"#\" onClick={() => changePageNumber(pageNumber + 1)}>\r\n                        Вперёд\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default PaginationComponent;","import {useSelector} from 'react-redux';\r\n\r\nexport const useUsers = () => {\r\n\r\n\r\n    const users = useSelector((state) => state.userPage.users);\r\n    const pageNumber = useSelector((state) => state.userPage.pageNumber);\r\n    const pageSize = useSelector((state) => state.userPage.pageSize);\r\n    const totalPages = useSelector((state) => state.userPage.totalPages);\r\n    const sortOrder = useSelector((state) => state.userPage.sortOrder);\r\n    const totalUsers = useSelector((state) => state.userPage.totalUsers);\r\n    const isLoaded = useSelector((state) => state.userPage.isLoaded);\r\n    const isPageReset = useSelector((state) => state.userPage.isPageReset);\r\n    const timePeriodFilter = useSelector((state) => state.userPage.timePeriodFilter);\r\n    const filter = useSelector((state) => state.userPage.filter);\r\n    const query = useSelector((state) => state.userPage.query);\r\n\r\n    return {\r\n        query,\r\n        users,\r\n        pageNumber,\r\n        pageSize,\r\n        totalPages,\r\n        sortOrder,\r\n        totalUsers,\r\n        isLoaded,\r\n        isPageReset,\r\n        timePeriodFilter,\r\n        filter,\r\n    };\r\n};"],"names":["_useUsers","useUsers","pageNumber","totalPages","dispatch","useDispatch","changePageNumber","newPageNumber","setPageNumber","_jsx","children","_jsxs","className","concat","href","onClick","Array","map","_","i","users","useSelector","state","userPage","pageSize","sortOrder","totalUsers","isLoaded","isPageReset","timePeriodFilter","filter","query"],"sourceRoot":""}