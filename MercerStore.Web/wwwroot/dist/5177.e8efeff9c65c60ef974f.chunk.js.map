{"version":3,"file":"5177.e8efeff9c65c60ef974f.chunk.js","mappings":"8LAiCA,QA5BkC,WAC9B,IAAQA,GAAaC,EAAAA,EAAAA,KAAbD,SACFE,GAAWC,EAAAA,EAAAA,MAWjB,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mBAAkBC,SAAC,iBACnCF,EAAAA,EAAAA,MAAA,UAAQC,UAAU,cAAcG,MAAOR,EAAUS,SAR5B,SAACC,GAC1B,IALoBC,IAKJC,SAASF,EAAMG,OAAOL,MAAO,IAJ7CN,GAASY,EAAAA,EAAAA,IAAYH,GAMzB,EAKwFL,SAAA,EAC5EC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,KAAIF,SAAC,QACnBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,KAAIF,SAAC,QACnBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,KAAIF,SAAC,QACnBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,KAAIF,SAAC,QACnBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,MAAKF,SAAC,SACpBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,MAAKF,SAAC,aAIpC,C,gDC7BaL,EAAc,WAEvB,IAAMc,GAAaC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBH,UAAU,IAY3E,MAAO,CACHI,UAZaH,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBC,QAAQ,IAanEC,YAZeJ,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBE,UAAU,IAavEpB,UAZagB,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBlB,QAAQ,IAanEqB,YAZeL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBG,UAAU,IAavEC,WAZcN,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBI,SAAS,IAarEP,WAAAA,EACAQ,eAbkBP,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBK,aAAa,IAc7EC,UAbaR,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBM,QAAQ,IAcnEC,aAbgBT,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBO,WAAW,IAczEC,QAbWV,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBQ,MAAM,IAc/DC,YAbeX,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBS,UAAU,IAe/E,C","sources":["webpack://mercerstore/./wwwroot/features/Admin/productPage/components/PageSizeSelectorComponent.jsx","webpack://mercerstore/./wwwroot/features/Admin/productPage/hooks/useProducts.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\r\nimport React from 'react';\r\nimport { useProducts } from '../hooks/useProducts';\r\nimport { setPageSize } from '../redux/adminProductPageSlice';\r\n\r\nconst PageSizeSelectorComponent = () => {\r\n    const { pageSize } = useProducts();\r\n    const dispatch = useDispatch();\r\n\r\n    const changePageSize = (newPageSize) => {\r\n        dispatch(setPageSize(newPageSize));\r\n    };\r\n\r\n    const handlePageSizeChange = (event) => {\r\n        const newSize = parseInt(event.target.value, 10);\r\n        changePageSize(newSize);\r\n    };\r\n\r\n    return (\r\n        <div className=\"input-group mb-3\">\r\n            <span className=\"input-group-text\">Показывать:</span>\r\n            <select className=\"form-select\" value={pageSize} onChange={handlePageSizeChange}>\r\n                <option value=\"30\">30</option>\r\n                <option value=\"45\">45</option>\r\n                <option value=\"60\">60</option>\r\n                <option value=\"90\">90</option>\r\n                <option value=\"120\">120</option>\r\n                <option value=\"150\">150</option>\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageSizeSelectorComponent;","import { useSelector } from 'react-redux';\r\n\r\nexport const useProducts = () => {\r\n\r\n    const categoryId = useSelector((state) => state.adminProductPage.categoryId);\r\n    const products = useSelector((state) => state.adminProductPage.products);\r\n    const pageNumber = useSelector((state) => state.adminProductPage.pageNumber);\r\n    const pageSize = useSelector((state) => state.adminProductPage.pageSize);\r\n    const totalPages = useSelector((state) => state.adminProductPage.totalPages);\r\n    const sortOrder = useSelector((state) => state.adminProductPage.sortOrder);\r\n    const totalProducts = useSelector((state) => state.adminProductPage.totalProducts);\r\n    const isLoaded = useSelector((state) => state.adminProductPage.isLoaded);\r\n    const isPageReset = useSelector((state) => state.adminProductPage.isPageReset);\r\n    const filter = useSelector((state) => state.adminProductPage.filter);\r\n    const categories = useSelector((state) => state.adminProductPage.categories);\r\n\r\n    return {\r\n        products,\r\n        pageNumber,\r\n        pageSize,\r\n        totalPages,\r\n        sortOrder,\r\n        categoryId,\r\n        totalProducts,\r\n        isLoaded,\r\n        isPageReset,\r\n        filter,\r\n        categories\r\n    };\r\n};"],"names":["pageSize","useProducts","dispatch","useDispatch","_jsxs","className","children","_jsx","value","onChange","event","newPageSize","parseInt","target","setPageSize","categoryId","useSelector","state","adminProductPage","products","pageNumber","totalPages","sortOrder","totalProducts","isLoaded","isPageReset","filter","categories"],"sourceRoot":""}