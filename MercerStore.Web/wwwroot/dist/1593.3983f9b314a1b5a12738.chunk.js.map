{"version":3,"file":"1593.3983f9b314a1b5a12738.chunk.js","mappings":"4LA4BA,QAvB8B,WAC1B,IAAMA,GAAWC,EAAAA,EAAAA,MACTC,GAAiBC,EAAAA,EAAAA,KAAjBD,aAMR,OACIE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mBAAkBC,SAAC,aACnCF,EAAAA,EAAAA,MAAA,UAAQC,UAAU,cAAcG,MAAON,EAAcO,SAPlC,SAACC,GACxB,IAAMC,EAAYD,EAAME,OAAOJ,MAC/BR,GAASa,EAAAA,EAAAA,IAAgBF,GAC7B,EAI0FL,SAAA,EAC9EC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,MAAKF,SAAC,SACpBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,UAASF,SAAC,qBACxBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,aAAYF,SAAC,gBAC3BC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,YAAWF,SAAC,iBAC1BC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,YAAWF,SAAC,gBAC1BC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,SAAQF,SAAC,mBAIvC,C,gDCxBaH,EAAY,WAerB,MAAO,CACHW,QAbWC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUH,MAAM,IAcxDI,YAbeH,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUC,UAAU,IAchEC,UAbaJ,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUE,QAAQ,IAc5DC,YAbeL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUG,UAAU,IAchEC,WAbcN,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUI,SAAS,IAc9DC,aAbgBP,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUK,WAAW,IAclEC,UAbaR,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUM,QAAQ,IAc5DC,aAbgBT,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUO,WAAW,IAclEC,kBAbqBV,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUQ,gBAAgB,IAc5EvB,cAbiBa,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUf,YAAY,IAcpEwB,OAbUX,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUS,KAAK,IAe9D,C","sources":["webpack://mercerstore/./wwwroot/features/Admin/orderPage/components/StatusFilterComponent.jsx","webpack://mercerstore/./wwwroot/features/Admin/orderPage/hooks/useOrders.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useOrders } from \"../hooks/useOrders\";\r\nimport { setStatusFilter } from \"../redux/orderPageSlice\";\r\n\r\nconst StatusFilterComponent = () => {\r\n    const dispatch = useDispatch();\r\n    const { statusFilter } = useOrders();\r\n\r\n    const handleFilterChange = (event) => {\r\n        const newFilter = event.target.value;\r\n        dispatch(setStatusFilter(newFilter));\r\n    };\r\n    return (\r\n        <div className=\"input-group mb-3\">\r\n            <span className=\"input-group-text\">Статус:</span>\r\n            <select className=\"form-select\" value={statusFilter} onChange={handleFilterChange}>\r\n                <option value=\"All\">Все</option>\r\n                <option value=\"Pending\">На рассмотрении</option>\r\n                <option value=\"InProgress\">В процессе</option>\r\n                <option value=\"Completed\">Исполненные</option>\r\n                <option value=\"Cancelled\">Отмененные</option>\r\n                <option value=\"Failed\">Неудачные</option>\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StatusFilterComponent;","import { useSelector } from 'react-redux';\r\n\r\nexport const useOrders = () => {\r\n\r\n    \r\n    const orders = useSelector((state) => state.orderPage.orders);\r\n    const pageNumber = useSelector((state) => state.orderPage.pageNumber);\r\n    const pageSize = useSelector((state) => state.orderPage.pageSize);\r\n    const totalPages = useSelector((state) => state.orderPage.totalPages);\r\n    const sortOrder = useSelector((state) => state.orderPage.sortOrder);\r\n    const totalOrders = useSelector((state) => state.orderPage.totalOrders);\r\n    const isLoaded = useSelector((state) => state.orderPage.isLoaded);\r\n    const isPageReset = useSelector((state) => state.orderPage.isPageReset);\r\n    const timePeriodFilter = useSelector((state) => state.orderPage.timePeriodFilter);\r\n    const statusFilter = useSelector((state) => state.orderPage.statusFilter);\r\n    const query = useSelector((state) => state.orderPage.query);\r\n\r\n    return {\r\n        orders,\r\n        pageNumber,\r\n        pageSize,\r\n        totalPages,\r\n        sortOrder,\r\n        totalOrders,\r\n        isLoaded,\r\n        isPageReset,\r\n        timePeriodFilter,\r\n        statusFilter,\r\n        query\r\n    };\r\n};"],"names":["dispatch","useDispatch","statusFilter","useOrders","_jsxs","className","children","_jsx","value","onChange","event","newFilter","target","setStatusFilter","orders","useSelector","state","orderPage","pageNumber","pageSize","totalPages","sortOrder","totalOrders","isLoaded","isPageReset","timePeriodFilter","query"],"sourceRoot":""}