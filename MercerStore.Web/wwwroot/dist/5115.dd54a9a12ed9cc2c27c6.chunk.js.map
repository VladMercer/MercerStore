{"version":3,"file":"5115.dd54a9a12ed9cc2c27c6.chunk.js","mappings":"4LA4BA,QAvBkC,WAC9B,IAAMA,GAAWC,EAAAA,EAAAA,MACVC,GAAoBC,EAAAA,EAAAA,KAApBD,iBAMP,OACIE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mBAAkBC,SAAC,aACnCF,EAAAA,EAAAA,MAAA,UAAQC,UAAU,cAAcG,MAAON,EAAkBO,SAPtC,SAACC,GACxB,IAAMC,EAAYD,EAAME,OAAOJ,MAC/BR,GAASa,EAAAA,EAAAA,IAAoBF,GACjC,EAI8FL,SAAA,EAClFC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,MAAKF,SAAC,kBACpBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,MAAKF,SAAC,kBACpBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,OAAMF,SAAC,oBACrBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,QAAOF,SAAC,mBACtBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,UAASF,SAAC,qBACxBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,OAAMF,SAAC,qBAIrC,C,gDCxBaH,EAAa,WAGtB,IAAMW,GAAUC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWH,OAAO,IACzDI,GAAaH,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWC,UAAU,IAC/DC,GAAWJ,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWE,QAAQ,IAC3DC,GAAaL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWG,UAAU,IAC/DC,GAAYN,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWI,SAAS,IAC7DC,GAAeP,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWK,YAAY,IACnEC,GAAWR,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWM,QAAQ,IAC3DC,GAAcT,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWO,WAAW,IACjEtB,GAAmBa,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWf,gBAAgB,IAC3EuB,GAASV,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWQ,MAAM,IAG7D,MAAO,CACHC,OAHUX,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWS,KAAK,IAIvDZ,QAAAA,EACAI,WAAAA,EACAC,SAAAA,EACAC,WAAAA,EACAC,UAAAA,EACAC,aAAAA,EACAC,SAAAA,EACAC,YAAAA,EACAtB,iBAAAA,EACAuB,OAAAA,EAER,C","sources":["webpack://mercerstore/./wwwroot/features/Admin/reviewPage/components/TimePeriodFilterComponent.jsx","webpack://mercerstore/./wwwroot/features/Admin/reviewPage/hooks/useReviews.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useReviews} from \"../hooks/useReviews\";\r\nimport {setTimePeriodFilter} from \"../redux/reviewPageSlice\";\r\n\r\nconst TimePeriodFilterComponent = () => {\r\n    const dispatch = useDispatch();\r\n    const {timePeriodFilter} = useReviews();\r\n\r\n    const handleFilterChange = (event) => {\r\n        const newFilter = event.target.value;\r\n        dispatch(setTimePeriodFilter(newFilter));\r\n    };\r\n    return (\r\n        <div className=\"input-group mb-3\">\r\n            <span className=\"input-group-text\">Пероид:</span>\r\n            <select className=\"form-select\" value={timePeriodFilter} onChange={handleFilterChange}>\r\n                <option value=\"All\">За все время</option>\r\n                <option value=\"Day\">За этот день</option>\r\n                <option value=\"Week\">На этой неделе</option>\r\n                <option value=\"Month\">В этом месяце</option>\r\n                <option value=\"Quarter\">В этом квартале</option>\r\n                <option value=\"Year\">В этом году</option>\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TimePeriodFilterComponent;","import {useSelector} from 'react-redux';\r\n\r\nexport const useReviews = () => {\r\n\r\n\r\n    const reviews = useSelector((state) => state.reviewPage.reviews);\r\n    const pageNumber = useSelector((state) => state.reviewPage.pageNumber);\r\n    const pageSize = useSelector((state) => state.reviewPage.pageSize);\r\n    const totalPages = useSelector((state) => state.reviewPage.totalPages);\r\n    const sortOrder = useSelector((state) => state.reviewPage.sortOrder);\r\n    const totalReviews = useSelector((state) => state.reviewPage.totalReviews);\r\n    const isLoaded = useSelector((state) => state.reviewPage.isLoaded);\r\n    const isPageReset = useSelector((state) => state.reviewPage.isPageReset);\r\n    const timePeriodFilter = useSelector((state) => state.reviewPage.timePeriodFilter);\r\n    const filter = useSelector((state) => state.reviewPage.filter);\r\n    const query = useSelector((state) => state.reviewPage.query);\r\n\r\n    return {\r\n        query,\r\n        reviews,\r\n        pageNumber,\r\n        pageSize,\r\n        totalPages,\r\n        sortOrder,\r\n        totalReviews,\r\n        isLoaded,\r\n        isPageReset,\r\n        timePeriodFilter,\r\n        filter,\r\n    };\r\n};"],"names":["dispatch","useDispatch","timePeriodFilter","useReviews","_jsxs","className","children","_jsx","value","onChange","event","newFilter","target","setTimePeriodFilter","reviews","useSelector","state","reviewPage","pageNumber","pageSize","totalPages","sortOrder","totalReviews","isLoaded","isPageReset","filter","query"],"sourceRoot":""}