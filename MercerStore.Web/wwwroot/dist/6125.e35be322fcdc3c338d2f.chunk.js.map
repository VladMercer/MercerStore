{"version":3,"file":"6125.e35be322fcdc3c338d2f.chunk.js","mappings":"8LAiCA,QA5BkC,WAC9B,IAAQA,GAAaC,EAAAA,EAAAA,KAAbD,SACFE,GAAWC,EAAAA,EAAAA,MAWjB,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mBAAkBC,SAAC,iBACnCF,EAAAA,EAAAA,MAAA,UAAQC,UAAU,cAAcG,MAAOR,EAAUS,SAR5B,SAACC,GAC1B,IALoBC,IAKJC,SAASF,EAAMG,OAAOL,MAAO,IAJ7CN,GAASY,EAAAA,EAAAA,IAAYH,GAMzB,EAKwFL,SAAA,EAC5EC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,KAAIF,SAAC,QACnBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,KAAIF,SAAC,QACnBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,KAAIF,SAAC,QACnBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,KAAIF,SAAC,QACnBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,MAAKF,SAAC,SACpBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,MAAKF,SAAC,aAIpC,C,gDC7BaL,EAAW,WAGpB,IAAMc,GAAQC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASH,KAAK,IACnDI,GAAaH,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASC,UAAU,IAC7DnB,GAAWgB,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASlB,QAAQ,IACzDoB,GAAaJ,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASE,UAAU,IAC7DC,GAAYL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASG,SAAS,IAC3DC,GAAaN,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASI,UAAU,IAC7DC,GAAWP,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASK,QAAQ,IACzDC,GAAcR,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASM,WAAW,IAC/DC,GAAmBT,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASO,gBAAgB,IACzEC,GAASV,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASQ,MAAM,IAG3D,MAAO,CACHC,OAHUX,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASS,KAAK,IAIrDZ,MAAAA,EACAI,WAAAA,EACAnB,SAAAA,EACAoB,WAAAA,EACAC,UAAAA,EACAC,WAAAA,EACAC,SAAAA,EACAC,YAAAA,EACAC,iBAAAA,EACAC,OAAAA,EAER,C","sources":["webpack://mercerstore/./wwwroot/features/Admin/userPage/components/PageSizeSelectorComponent.jsx","webpack://mercerstore/./wwwroot/features/Admin/userPage/hooks/useUsers.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\r\nimport React from 'react';\r\nimport { useUsers } from '../hooks/useUsers';\r\nimport { setPageSize } from '../redux/userPageSlice';\r\n\r\nconst PageSizeSelectorComponent = () => {\r\n    const { pageSize } = useUsers();\r\n    const dispatch = useDispatch();\r\n\r\n    const changePageSize = (newPageSize) => {\r\n        dispatch(setPageSize(newPageSize));\r\n    };\r\n\r\n    const handlePageSizeChange = (event) => {\r\n        const newSize = parseInt(event.target.value, 10);\r\n        changePageSize(newSize);\r\n    };\r\n\r\n    return (\r\n        <div className=\"input-group mb-3\">\r\n            <span className=\"input-group-text\">Показывать:</span>\r\n            <select className=\"form-select\" value={pageSize} onChange={handlePageSizeChange}>\r\n                <option value=\"30\">30</option>\r\n                <option value=\"45\">45</option>\r\n                <option value=\"60\">60</option>\r\n                <option value=\"90\">90</option>\r\n                <option value=\"120\">120</option>\r\n                <option value=\"150\">150</option>\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageSizeSelectorComponent;","import { useSelector } from 'react-redux';\r\n\r\nexport const useUsers = () => {\r\n\r\n    \r\n    const users = useSelector((state) => state.userPage.users);\r\n    const pageNumber = useSelector((state) => state.userPage.pageNumber);\r\n    const pageSize = useSelector((state) => state.userPage.pageSize);\r\n    const totalPages = useSelector((state) => state.userPage.totalPages);\r\n    const sortOrder = useSelector((state) => state.userPage.sortOrder);\r\n    const totalUsers = useSelector((state) => state.userPage.totalUsers);\r\n    const isLoaded = useSelector((state) => state.userPage.isLoaded);\r\n    const isPageReset = useSelector((state) => state.userPage.isPageReset);\r\n    const timePeriodFilter = useSelector((state) => state.userPage.timePeriodFilter);\r\n    const filter = useSelector((state) => state.userPage.filter);\r\n    const query = useSelector((state) => state.userPage.query);\r\n\r\n    return {\r\n        query,\r\n        users,\r\n        pageNumber,\r\n        pageSize,\r\n        totalPages,\r\n        sortOrder,\r\n        totalUsers,\r\n        isLoaded,\r\n        isPageReset,\r\n        timePeriodFilter,\r\n        filter,\r\n    };\r\n};"],"names":["pageSize","useUsers","dispatch","useDispatch","_jsxs","className","children","_jsx","value","onChange","event","newPageSize","parseInt","target","setPageSize","users","useSelector","state","userPage","pageNumber","totalPages","sortOrder","totalUsers","isLoaded","isPageReset","timePeriodFilter","filter","query"],"sourceRoot":""}