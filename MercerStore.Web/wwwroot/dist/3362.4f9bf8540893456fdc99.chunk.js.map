{"version":3,"file":"3362.4f9bf8540893456fdc99.chunk.js","mappings":"4LA+BA,QA1BsB,WAClB,IAAMA,GAAWC,EAAAA,EAAAA,MACTC,GAAcC,EAAAA,EAAAA,KAAdD,UAOR,OACIE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mBAAkBC,SAAC,kBACnCF,EAAAA,EAAAA,MAAA,UAAQC,UAAU,cAAcG,MAAON,EAAWO,SARjC,SAACC,GACtB,IAAMC,EAAeD,EAAME,OAAOJ,MAClCR,GAASa,EAAAA,EAAAA,IAAaF,GAC1B,EAKqFL,SAAA,EACzEC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,UAASF,SAAC,eACxBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,WAAUF,SAAC,eACzBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,WAAUF,SAAC,uBACzBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,YAAWF,SAAC,qBAC1BC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,YAAWF,SAAC,uBAC1BC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,aAAYF,SAAC,yBAC3BC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,aAAYF,SAAC,6BAC3BC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,cAAaF,SAAC,8BAI5C,C,gDC3BaH,EAAc,WAEvB,IAAMW,GAAaC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBH,UAAU,IAY3E,MAAO,CACHI,UAZaH,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBC,QAAQ,IAanEC,YAZeJ,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBE,UAAU,IAavEC,UAZaL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBG,QAAQ,IAanEC,YAZeN,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBI,UAAU,IAavEnB,WAZca,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBf,SAAS,IAarEY,WAAAA,EACAQ,eAbkBP,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBK,aAAa,IAc7EC,UAbaR,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBM,QAAQ,IAcnEC,aAbgBT,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBO,WAAW,IAczEC,QAbWV,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBQ,MAAM,IAc/DC,YAbeX,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBS,UAAU,IAe/E,C","sources":["webpack://mercerstore/./wwwroot/features/Admin/productPage/components/SortComponent.jsx","webpack://mercerstore/./wwwroot/features/Admin/productPage/hooks/useProducts.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useProducts } from '../hooks/useProducts';\r\nimport { setSortOrder } from '../redux/adminProductPageSlice';\r\n\r\nconst SortComponent = () => {\r\n    const dispatch = useDispatch();\r\n    const { sortOrder } = useProducts();\r\n\r\n    const handleSortChange = (event) => {\r\n        const newSortOrder = event.target.value;\r\n        dispatch(setSortOrder(newSortOrder));  \r\n    };\r\n\r\n    return (\r\n        <div className=\"input-group mb-3\">\r\n            <span className=\"input-group-text\">Сортировать:</span>\r\n            <select className=\"form-select\" value={sortOrder} onChange={handleSortChange}>\r\n                <option value=\"NameAsc\">Имя (я-а)</option>\r\n                <option value=\"NameDesc\">Имя (а-я)</option>\r\n                <option value=\"PriceAsc\">Сначала недорогие</option>\r\n                <option value=\"PriceDesc\">Сначала дорогие</option>\r\n                <option value=\"StatusAsc\">Сначала доступные</option>\r\n                <option value=\"StatusDesc\">Сначала недоступные</option>\r\n                <option value=\"InStockAsc\">Сначала заканчивающиеся</option>\r\n                <option value=\"InStockDesc\">Сначала больше всего</option>\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SortComponent;","import { useSelector } from 'react-redux';\r\n\r\nexport const useProducts = () => {\r\n\r\n    const categoryId = useSelector((state) => state.adminProductPage.categoryId);\r\n    const products = useSelector((state) => state.adminProductPage.products);\r\n    const pageNumber = useSelector((state) => state.adminProductPage.pageNumber);\r\n    const pageSize = useSelector((state) => state.adminProductPage.pageSize);\r\n    const totalPages = useSelector((state) => state.adminProductPage.totalPages);\r\n    const sortOrder = useSelector((state) => state.adminProductPage.sortOrder);\r\n    const totalProducts = useSelector((state) => state.adminProductPage.totalProducts);\r\n    const isLoaded = useSelector((state) => state.adminProductPage.isLoaded);\r\n    const isPageReset = useSelector((state) => state.adminProductPage.isPageReset);\r\n    const filter = useSelector((state) => state.adminProductPage.filter);\r\n    const categories = useSelector((state) => state.adminProductPage.categories);\r\n\r\n    return {\r\n        products,\r\n        pageNumber,\r\n        pageSize,\r\n        totalPages,\r\n        sortOrder,\r\n        categoryId,\r\n        totalProducts,\r\n        isLoaded,\r\n        isPageReset,\r\n        filter,\r\n        categories\r\n    };\r\n};"],"names":["dispatch","useDispatch","sortOrder","useProducts","_jsxs","className","children","_jsx","value","onChange","event","newSortOrder","target","setSortOrder","categoryId","useSelector","state","adminProductPage","products","pageNumber","pageSize","totalPages","totalProducts","isLoaded","isPageReset","filter","categories"],"sourceRoot":""}