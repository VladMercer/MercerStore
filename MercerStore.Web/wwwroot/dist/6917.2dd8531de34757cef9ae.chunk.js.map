{"version":3,"file":"6917.2dd8531de34757cef9ae.chunk.js","mappings":"kSAwCA,QAnC4B,WACxB,I,EAAAA,GAAiCC,EAAAA,EAAAA,KAA1BC,EAAUF,EAAVE,WAAYC,EAAUH,EAAVG,WACbC,GAAWC,EAAAA,EAAAA,MAEXC,EAAmB,SAACC,GAClBA,EAAgB,GAAKA,GAAiBJ,GACtCC,GAASI,EAAAA,EAAAA,IAAcD,GAE/B,EAEA,OACIE,EAAAA,EAAAA,KAAA,OAAK,aAAW,0BAAyBC,UACrCC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,aAAYF,SAAA,EACtBD,EAAAA,EAAAA,KAAA,MAAIG,UAAS,aAAAC,OAAeX,GAAc,EAAI,WAAa,IAAKQ,UAC5DD,EAAAA,EAAAA,KAAA,KAAGG,UAAU,YAAYE,KAAK,IAAIC,QAAS,WAAF,OAAQT,EAAiBJ,EAAa,EAAE,EAACQ,SAAC,a,EAIlFM,MAAMb,G,omBAAac,KAAI,SAACC,EAAGC,GAAC,OAC7BV,EAAAA,EAAAA,KAAA,MAAYG,UAAS,aAAAC,OAAeX,IAAeiB,EAAI,EAAI,SAAW,IAAKT,UACvED,EAAAA,EAAAA,KAAA,KAAGG,UAAU,YAAYE,KAAK,IAAIC,QAAS,WAAF,OAAQT,EAAiBa,EAAI,EAAE,EAACT,SACpES,EAAI,KAFJA,EAIJ,KAETV,EAAAA,EAAAA,KAAA,MAAIG,UAAS,aAAAC,OAAeX,GAAcC,EAAa,WAAa,IAAKO,UACrED,EAAAA,EAAAA,KAAA,KAAGG,UAAU,YAAYE,KAAK,IAAIC,QAAS,WAAF,OAAQT,EAAiBJ,EAAa,EAAE,EAACQ,SAAC,iBAOvG,C,gDCpCaT,EAAa,WAGtB,IAAMmB,GAAUC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWH,OAAO,IACzDlB,GAAamB,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWrB,UAAU,IAC/DsB,GAAWH,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWC,QAAQ,IAC3DrB,GAAakB,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWpB,UAAU,IAC/DsB,GAAYJ,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWE,SAAS,IAC7DC,GAAeL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWG,YAAY,IACnEC,GAAWN,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWI,QAAQ,IAC3DC,GAAcP,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWK,WAAW,IACjEC,GAAmBR,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWM,gBAAgB,IAC3EC,GAAST,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWO,MAAM,IAG7D,MAAO,CACHC,OAHUV,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWQ,KAAK,IAIvDX,QAAAA,EACAlB,WAAAA,EACAsB,SAAAA,EACArB,WAAAA,EACAsB,UAAAA,EACAC,aAAAA,EACAC,SAAAA,EACAC,YAAAA,EACAC,iBAAAA,EACAC,OAAAA,EAER,C","sources":["webpack://mercerstore/./wwwroot/features/Admin/reviewPage/components/PaginationComponent.jsx","webpack://mercerstore/./wwwroot/features/Admin/reviewPage/hooks/useReviews.jsx"],"sourcesContent":["import React from 'react';\r\nimport {useReviews} from '../hooks/useReviews';\r\nimport {useDispatch} from 'react-redux';\r\nimport {setPageNumber} from '../redux/reviewPageSlice';\r\n\r\nconst PaginationComponent = () => {\r\n    const {pageNumber, totalPages} = useReviews();\r\n    const dispatch = useDispatch();\r\n\r\n    const changePageNumber = (newPageNumber) => {\r\n        if (newPageNumber > 0 && newPageNumber <= totalPages) {\r\n            dispatch(setPageNumber(newPageNumber));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <nav aria-label=\"Page navigation example\">\r\n            <ul className=\"pagination\">\r\n                <li className={`page-item ${pageNumber <= 1 ? 'disabled' : ''}`}>\r\n                    <a className=\"page-link\" href=\"#\" onClick={() => changePageNumber(pageNumber - 1)}>\r\n                        Назад\r\n                    </a>\r\n                </li>\r\n                {[...Array(totalPages)].map((_, i) => (\r\n                    <li key={i} className={`page-item ${pageNumber === i + 1 ? 'active' : ''}`}>\r\n                        <a className=\"page-link\" href=\"#\" onClick={() => changePageNumber(i + 1)}>\r\n                            {i + 1}\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n                <li className={`page-item ${pageNumber >= totalPages ? 'disabled' : ''}`}>\r\n                    <a className=\"page-link\" href=\"#\" onClick={() => changePageNumber(pageNumber + 1)}>\r\n                        Вперёд\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default PaginationComponent;","import {useSelector} from 'react-redux';\r\n\r\nexport const useReviews = () => {\r\n\r\n\r\n    const reviews = useSelector((state) => state.reviewPage.reviews);\r\n    const pageNumber = useSelector((state) => state.reviewPage.pageNumber);\r\n    const pageSize = useSelector((state) => state.reviewPage.pageSize);\r\n    const totalPages = useSelector((state) => state.reviewPage.totalPages);\r\n    const sortOrder = useSelector((state) => state.reviewPage.sortOrder);\r\n    const totalReviews = useSelector((state) => state.reviewPage.totalReviews);\r\n    const isLoaded = useSelector((state) => state.reviewPage.isLoaded);\r\n    const isPageReset = useSelector((state) => state.reviewPage.isPageReset);\r\n    const timePeriodFilter = useSelector((state) => state.reviewPage.timePeriodFilter);\r\n    const filter = useSelector((state) => state.reviewPage.filter);\r\n    const query = useSelector((state) => state.reviewPage.query);\r\n\r\n    return {\r\n        query,\r\n        reviews,\r\n        pageNumber,\r\n        pageSize,\r\n        totalPages,\r\n        sortOrder,\r\n        totalReviews,\r\n        isLoaded,\r\n        isPageReset,\r\n        timePeriodFilter,\r\n        filter,\r\n    };\r\n};"],"names":["_useReviews","useReviews","pageNumber","totalPages","dispatch","useDispatch","changePageNumber","newPageNumber","setPageNumber","_jsx","children","_jsxs","className","concat","href","onClick","Array","map","_","i","reviews","useSelector","state","reviewPage","pageSize","sortOrder","totalReviews","isLoaded","isPageReset","timePeriodFilter","filter","query"],"sourceRoot":""}