{"version":3,"file":"1301.d6c2083b80adf83a4e48.chunk.js","mappings":"2LA2BA,QAtBsB,WAClB,IAAMA,GAAWC,EAAAA,EAAAA,MACTC,GAAcC,EAAAA,EAAAA,KAAdD,UAOR,OACIE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mBAAkBC,SAAC,kBACnCF,EAAAA,EAAAA,MAAA,UAAQC,UAAU,cAAcG,MAAON,EAAWO,SARjC,SAACC,GACtB,IAAMC,EAAeD,EAAME,OAAOJ,MAClCR,GAASa,EAAAA,EAAAA,IAAaF,GAC1B,EAKqFL,SAAA,EACzEC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,WAAUF,SAAC,eACzBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,YAAWF,SAAC,eAC1BC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,YAAWF,SAAC,uBAC1BC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,aAAYF,SAAC,yBAI3C,C,gDCvBaH,EAAgB,WAazB,MAAO,CACHW,SAXYC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWH,OAAO,IAY3DI,YAXeH,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWC,UAAU,IAYjEC,UAXaJ,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWE,QAAQ,IAY7DC,YAXeL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWG,UAAU,IAYjElB,WAXca,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWf,SAAS,IAY/DmB,UAXaN,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWI,QAAQ,IAY7DC,aAXgBP,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWK,WAAW,IAYnEC,OAXUR,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWM,KAAK,IAYvDC,YAXeT,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWO,UAAU,IAczE,C","sources":["webpack://mercerstore/./wwwroot/features/searchPage/components/SortComponent.jsx","webpack://mercerstore/./wwwroot/features/searchPage/hooks/useSearchPage.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSearchPage } from '../hooks/useSearchPage';\r\nimport { setSortOrder } from '../redux/searchPageSlice';\r\n\r\nconst SortComponent = () => {\r\n    const dispatch = useDispatch();\r\n    const { sortOrder } = useSearchPage();\r\n\r\n    const handleSortChange = (event) => {\r\n        const newSortOrder = event.target.value;\r\n        dispatch(setSortOrder(newSortOrder));  \r\n    };\r\n\r\n    return (\r\n        <div className=\"input-group mb-3\">\r\n            <span className=\"input-group-text\">Сортировать:</span>\r\n            <select className=\"form-select\" value={sortOrder} onChange={handleSortChange}>\r\n                <option value=\"name_asc\">Имя (я-а)</option>\r\n                <option value=\"name_desc\">Имя (а-я)</option>\r\n                <option value=\"price_asc\">Сначала недорогие</option>\r\n                <option value=\"price_desc\">Сначала дорогие</option>\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SortComponent;","import { useSelector } from 'react-redux';\r\n\r\nexport const useSearchPage = () => {\r\n\r\n\r\n    const results = useSelector((state) => state.searchPage.results);\r\n    const pageNumber = useSelector((state) => state.searchPage.pageNumber);\r\n    const pageSize = useSelector((state) => state.searchPage.pageSize);\r\n    const totalPages = useSelector((state) => state.searchPage.totalPages);\r\n    const sortOrder = useSelector((state) => state.searchPage.sortOrder);\r\n    const isLoaded = useSelector((state) => state.searchPage.isLoaded);\r\n    const isPageReset = useSelector((state) => state.searchPage.isPageReset);\r\n    const query = useSelector((state) => state.searchPage.query);\r\n    const totalItems = useSelector((state) => state.searchPage.totalItems);\r\n\r\n    return {\r\n        results,\r\n        pageNumber,\r\n        pageSize,\r\n        totalPages,\r\n        sortOrder,\r\n        isLoaded,\r\n        isPageReset,\r\n        query,\r\n        totalItems\r\n        \r\n    };\r\n};"],"names":["dispatch","useDispatch","sortOrder","useSearchPage","_jsxs","className","children","_jsx","value","onChange","event","newSortOrder","target","setSortOrder","results","useSelector","state","searchPage","pageNumber","pageSize","totalPages","isLoaded","isPageReset","query","totalItems"],"sourceRoot":""}