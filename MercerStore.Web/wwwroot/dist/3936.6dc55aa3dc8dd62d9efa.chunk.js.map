{"version":3,"file":"3936.6dc55aa3dc8dd62d9efa.chunk.js","mappings":"4LA+BA,QA1BwB,WACpB,IAAMA,GAAWC,EAAAA,EAAAA,MACVC,GAAUC,EAAAA,EAAAA,KAAVD,OAMP,OACIE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mBAAkBC,SAAC,aACnCF,EAAAA,EAAAA,MAAA,UAAQC,UAAU,cAAcG,MAAON,EAAQO,SAP5B,SAACC,GACxBV,GAASW,EAAAA,EAAAA,IAAUD,EAAME,OAAOJ,OACpC,EAKoFF,SAAA,EACxEC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,MAAKF,SAAC,kBACpBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,UAASF,SAAC,gBACxBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,WAAUF,SAAC,cACzBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,oBAAmBF,SAAC,uBAClCC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,WAAUF,SAAC,eACzBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,SAAQF,SAAC,aACvBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,WAAUF,SAAC,4BACzBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,eAAcF,SAAC,uBAC7BC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,cAAaF,SAAC,wBAI5C,C,gDC3BaH,EAAc,WAGvB,IAAMU,GAAWC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYH,QAAQ,IAC5DI,GAAaH,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYC,UAAU,IAChEC,GAAWJ,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYE,QAAQ,IAC5DC,GAAaL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYG,UAAU,IAChEC,GAAYN,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYI,SAAS,IAC9DC,GAAgBP,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYK,aAAa,IACtEC,GAAWR,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYM,QAAQ,IAC5DC,GAAcT,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYO,WAAW,IAClEC,GAAmBV,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYQ,gBAAgB,IAC5EtB,GAASY,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYd,MAAM,IAG9D,MAAO,CACHuB,OAHUX,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYS,KAAK,IAIxDZ,SAAAA,EACAI,WAAAA,EACAC,SAAAA,EACAC,WAAAA,EACAC,UAAAA,EACAC,cAAAA,EACAC,SAAAA,EACAC,YAAAA,EACAC,iBAAAA,EACAtB,OAAAA,EAER,C","sources":["webpack://mercerstore/./wwwroot/features/Admin/invoicePage/components/FilterComponent.jsx","webpack://mercerstore/./wwwroot/features/Admin/invoicePage/hooks/useInvoices.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useInvoices} from \"../hooks/useInvoices\";\r\nimport {setFilter} from \"../redux/invoicePageSlice\";\r\n\r\nconst FilterComponent = () => {\r\n    const dispatch = useDispatch();\r\n    const {filter} = useInvoices();\r\n\r\n    const handleFilterChange = (event) => {\r\n        dispatch(setFilter(event.target.value));\r\n    };\r\n\r\n    return (\r\n        <div className=\"input-group mb-3\">\r\n            <span className=\"input-group-text\">Фильтр:</span>\r\n            <select className=\"form-select\" value={filter} onChange={handleFilterChange}>\r\n                <option value=\"All\">Все поставки</option>\r\n                <option value=\"Pending\">В ожидании</option>\r\n                <option value=\"Received\">Получено</option>\r\n                <option value=\"PartiallyReceived\">Частично получено</option>\r\n                <option value=\"Rejected\">Отклонено</option>\r\n                <option value=\"Closed\">Закрыто</option>\r\n                <option value=\"EditDate\">По дате редактирования</option>\r\n                <option value=\"DateReceived\">По дате получения</option>\r\n                <option value=\"PaymentDate\">По дате оплаты</option>\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FilterComponent;","import {useSelector} from 'react-redux';\r\n\r\nexport const useInvoices = () => {\r\n\r\n\r\n    const invoices = useSelector((state) => state.invoicePage.invoices);\r\n    const pageNumber = useSelector((state) => state.invoicePage.pageNumber);\r\n    const pageSize = useSelector((state) => state.invoicePage.pageSize);\r\n    const totalPages = useSelector((state) => state.invoicePage.totalPages);\r\n    const sortOrder = useSelector((state) => state.invoicePage.sortOrder);\r\n    const totalInvoices = useSelector((state) => state.invoicePage.totalInvoices);\r\n    const isLoaded = useSelector((state) => state.invoicePage.isLoaded);\r\n    const isPageReset = useSelector((state) => state.invoicePage.isPageReset);\r\n    const timePeriodFilter = useSelector((state) => state.invoicePage.timePeriodFilter);\r\n    const filter = useSelector((state) => state.invoicePage.filter);\r\n    const query = useSelector((state) => state.invoicePage.query);\r\n\r\n    return {\r\n        query,\r\n        invoices,\r\n        pageNumber,\r\n        pageSize,\r\n        totalPages,\r\n        sortOrder,\r\n        totalInvoices,\r\n        isLoaded,\r\n        isPageReset,\r\n        timePeriodFilter,\r\n        filter,\r\n    };\r\n};"],"names":["dispatch","useDispatch","filter","useInvoices","_jsxs","className","children","_jsx","value","onChange","event","setFilter","target","invoices","useSelector","state","invoicePage","pageNumber","pageSize","totalPages","sortOrder","totalInvoices","isLoaded","isPageReset","timePeriodFilter","query"],"sourceRoot":""}