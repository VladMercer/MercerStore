{"version":3,"file":"3572.204d2907f709ee19846a.chunk.js","mappings":"wKAgBA,QAbmC,WAC/B,IAAAA,GAA8CC,EAAAA,EAAAA,KAAvCC,EAAaF,EAAbE,cAAeC,EAAUH,EAAVG,WAAYC,EAAQJ,EAARI,SAElC,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,UAC3BC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,aACWJ,EAAa,GAAKC,EAAW,EAAE,MAAIK,KAAKC,IAAIP,EAAaC,EAAUF,GAAe,OAAKA,MAKlH,C,gDCZaD,EAAc,WAGvB,IAAMU,GAAWC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYH,QAAQ,IAC5DR,GAAaS,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYX,UAAU,IAChEC,GAAWQ,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYV,QAAQ,IAC5DW,GAAaH,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYC,UAAU,IAChEC,GAAYJ,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYE,SAAS,IAC9Dd,GAAgBU,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYZ,aAAa,IACtEe,GAAWL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYG,QAAQ,IAC5DC,GAAcN,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYI,WAAW,IAClEC,GAAmBP,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYK,gBAAgB,IAC5EC,GAASR,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYM,MAAM,IAG9D,MAAO,CACHC,OAHUT,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYO,KAAK,IAIxDV,SAAAA,EACAR,WAAAA,EACAC,SAAAA,EACAW,WAAAA,EACAC,UAAAA,EACAd,cAAAA,EACAe,SAAAA,EACAC,YAAAA,EACAC,iBAAAA,EACAC,OAAAA,EAER,C","sources":["webpack://mercerstore/./wwwroot/features/Admin/invoicePage/components/TotalInvoicesInfoComponent.jsx","webpack://mercerstore/./wwwroot/features/Admin/invoicePage/hooks/useInvoices.jsx"],"sourcesContent":["import React from 'react';\r\nimport {useInvoices} from '../hooks/useInvoices';\r\n\r\nconst TotalInvoicesInfoComponent = () => {\r\n    const {totalInvoices, pageNumber, pageSize} = useInvoices();\r\n\r\n    return (\r\n        <div className=\"total-products\">\r\n            <h3>\r\n                Показано {(pageNumber - 1) * pageSize + 1} - {Math.min(pageNumber * pageSize, totalInvoices)} из {totalInvoices}\r\n            </h3>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TotalInvoicesInfoComponent;","import {useSelector} from 'react-redux';\r\n\r\nexport const useInvoices = () => {\r\n\r\n\r\n    const invoices = useSelector((state) => state.invoicePage.invoices);\r\n    const pageNumber = useSelector((state) => state.invoicePage.pageNumber);\r\n    const pageSize = useSelector((state) => state.invoicePage.pageSize);\r\n    const totalPages = useSelector((state) => state.invoicePage.totalPages);\r\n    const sortOrder = useSelector((state) => state.invoicePage.sortOrder);\r\n    const totalInvoices = useSelector((state) => state.invoicePage.totalInvoices);\r\n    const isLoaded = useSelector((state) => state.invoicePage.isLoaded);\r\n    const isPageReset = useSelector((state) => state.invoicePage.isPageReset);\r\n    const timePeriodFilter = useSelector((state) => state.invoicePage.timePeriodFilter);\r\n    const filter = useSelector((state) => state.invoicePage.filter);\r\n    const query = useSelector((state) => state.invoicePage.query);\r\n\r\n    return {\r\n        query,\r\n        invoices,\r\n        pageNumber,\r\n        pageSize,\r\n        totalPages,\r\n        sortOrder,\r\n        totalInvoices,\r\n        isLoaded,\r\n        isPageReset,\r\n        timePeriodFilter,\r\n        filter,\r\n    };\r\n};"],"names":["_useInvoices","useInvoices","totalInvoices","pageNumber","pageSize","_jsx","className","children","_jsxs","Math","min","invoices","useSelector","state","invoicePage","totalPages","sortOrder","isLoaded","isPageReset","timePeriodFilter","filter","query"],"sourceRoot":""}