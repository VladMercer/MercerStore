{"version":3,"file":"5374.581dfbe1544dbb633011.chunk.js","mappings":"4LA4BA,QAvBsB,WAClB,IAAMA,GAAWC,EAAAA,EAAAA,MACVC,GAAaC,EAAAA,EAAAA,KAAbD,UAMP,OACIE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mBAAkBC,SAAC,iBACnCF,EAAAA,EAAAA,MAAA,UAAQC,UAAU,cAAcG,MAAON,EAAWO,SAPjC,SAACC,GACtBV,GAASW,EAAAA,EAAAA,IAAaD,EAAME,OAAOJ,OACvC,EAKqFF,SAAA,EACzEC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,cAAaF,SAAC,2BAC5BC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,eAAcF,SAAC,0BAC7BC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,iBAAgBF,SAAC,4BAC/BC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,kBAAiBF,SAAC,yBAChCC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,YAAWF,SAAC,kBAC1BC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,aAAYF,SAAC,sBAI3C,C,gDCxBaH,EAAc,WAGvB,IAAMU,GAAWC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYH,QAAQ,IAC5DI,GAAaH,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYC,UAAU,IAChEC,GAAWJ,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYE,QAAQ,IAC5DC,GAAaL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYG,UAAU,IAChEjB,GAAYY,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYd,SAAS,IAC9DkB,GAAgBN,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYI,aAAa,IACtEC,GAAWP,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYK,QAAQ,IAC5DC,GAAcR,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYM,WAAW,IAClEC,GAAmBT,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYO,gBAAgB,IAC5EC,GAASV,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYQ,MAAM,IAG9D,MAAO,CACHC,OAHUX,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYS,KAAK,IAIxDZ,SAAAA,EACAI,WAAAA,EACAC,SAAAA,EACAC,WAAAA,EACAjB,UAAAA,EACAkB,cAAAA,EACAC,SAAAA,EACAC,YAAAA,EACAC,iBAAAA,EACAC,OAAAA,EAER,C","sources":["webpack://mercerstore/./wwwroot/features/Admin/invoicePage/components/SortComponent.jsx","webpack://mercerstore/./wwwroot/features/Admin/invoicePage/hooks/useInvoices.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useInvoices} from \"../hooks/useInvoices\";\r\nimport {setSortOrder} from \"../redux/invoicePageSlice\";\r\n\r\nconst SortComponent = () => {\r\n    const dispatch = useDispatch();\r\n    const {sortOrder} = useInvoices();\r\n\r\n    const handleSortChange = (event) => {\r\n        dispatch(setSortOrder(event.target.value));\r\n    };\r\n\r\n    return (\r\n        <div className=\"input-group mb-3\">\r\n            <span className=\"input-group-text\">Сортировка:</span>\r\n            <select className=\"form-select\" value={sortOrder} onChange={handleSortChange}>\r\n                <option value=\"DateTimeAsc\">Дата (сначала старые)</option>\r\n                <option value=\"DateTimeDesc\">Дата (сначала новые)</option>\r\n                <option value=\"TotalAmountAsc\">Сумма (по возрастанию)</option>\r\n                <option value=\"TotalAmountDesc\">Сумма (по убыванию)</option>\r\n                <option value=\"StatusAsc\">Статус (А-Я)</option>\r\n                <option value=\"StatusDesc\">Статус (Я-А)</option>\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SortComponent;","import {useSelector} from 'react-redux';\r\n\r\nexport const useInvoices = () => {\r\n\r\n\r\n    const invoices = useSelector((state) => state.invoicePage.invoices);\r\n    const pageNumber = useSelector((state) => state.invoicePage.pageNumber);\r\n    const pageSize = useSelector((state) => state.invoicePage.pageSize);\r\n    const totalPages = useSelector((state) => state.invoicePage.totalPages);\r\n    const sortOrder = useSelector((state) => state.invoicePage.sortOrder);\r\n    const totalInvoices = useSelector((state) => state.invoicePage.totalInvoices);\r\n    const isLoaded = useSelector((state) => state.invoicePage.isLoaded);\r\n    const isPageReset = useSelector((state) => state.invoicePage.isPageReset);\r\n    const timePeriodFilter = useSelector((state) => state.invoicePage.timePeriodFilter);\r\n    const filter = useSelector((state) => state.invoicePage.filter);\r\n    const query = useSelector((state) => state.invoicePage.query);\r\n\r\n    return {\r\n        query,\r\n        invoices,\r\n        pageNumber,\r\n        pageSize,\r\n        totalPages,\r\n        sortOrder,\r\n        totalInvoices,\r\n        isLoaded,\r\n        isPageReset,\r\n        timePeriodFilter,\r\n        filter,\r\n    };\r\n};"],"names":["dispatch","useDispatch","sortOrder","useInvoices","_jsxs","className","children","_jsx","value","onChange","event","setSortOrder","target","invoices","useSelector","state","invoicePage","pageNumber","pageSize","totalPages","totalInvoices","isLoaded","isPageReset","timePeriodFilter","filter","query"],"sourceRoot":""}