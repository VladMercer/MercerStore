{"version":3,"file":"9147.63906fa678d98570a516.chunk.js","mappings":"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","sources":["webpack://mercerstore/./wwwroot/features/Admin/productPage/components/ProductListComponent.jsx","webpack://mercerstore/./wwwroot/features/Admin/productPage/hooks/useFetchProducts.jsx","webpack://mercerstore/./wwwroot/features/Admin/productPage/hooks/useProducts.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useProducts } from '../hooks/useProducts';\r\nimport useFetchProducts from '../hooks/useFetchProducts';\r\n\r\nconst ProductListComponent = () => {\r\n    useFetchProducts();\r\n    const { products } = useProducts();\r\n\r\n    return (\r\n        <table className=\"table table-striped table-hover table-responsive-md table-sm\">\r\n            <thead className=\"thead-dark\">\r\n                <tr>\r\n                    <th className=\"text-center\">Картинка</th>\r\n                    <th>Название</th>\r\n                    <th className=\"text-center\">Цена / Скидка</th>\r\n                    <th className=\"text-center\">Статус и Наличие</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {products && products.length > 0 ? (\r\n                    products.map((product) => (\r\n                        <tr\r\n                            key={product.id}\r\n                            onClick={() => (window.location.href = `/admin/product/update/${product.id}`)}\r\n                            style={{ cursor: 'pointer', verticalAlign: 'middle' }}\r\n                        >\r\n                           \r\n                            <td className=\"text-center\">\r\n                                <img\r\n                                    src={product.mainImageUrl}\r\n                                    alt={product.name}\r\n                                    className=\"img-fluid\"\r\n                                    style={{ maxWidth: '50px', height: 'auto' }}\r\n                                    loading=\"lazy\"\r\n                                />\r\n                            </td>\r\n\r\n                            <td className=\"text-truncate text-wrap\" style={{ maxWidth: '200px' }}>\r\n                                <p\r\n                                    className=\"m-0\"\r\n                                    dangerouslySetInnerHTML={{\r\n                                        __html: product.name,\r\n                                    }}\r\n                                ></p>\r\n                            </td>\r\n\r\n                           \r\n                            <td className=\"text-center\">\r\n                                <div className=\"d-flex flex-column\">\r\n                                    <span>{product.price}₽</span>\r\n                                    {product.discountedPrice && (\r\n                                        <small className=\"text-muted\">\r\n                                            {product.discountedPrice}₽\r\n                                        </small>\r\n                                    )}\r\n                                </div>\r\n                            </td>\r\n\r\n                        \r\n                            <td className=\"text-center\">\r\n                                <div className=\"d-flex flex-column align-items-center\">\r\n                                    <span>{product.status}</span>\r\n                                    <span className=\"mt-2\">\r\n                                        {product.inStock > 0\r\n                                            ? `${product.inStock} шт.`\r\n                                            : 'Нет в наличии'}\r\n                                    </span>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    ))\r\n                ) : (\r\n                    <tr>\r\n                        <td colSpan=\"4\" className=\"text-center\">\r\n                            Нет данных\r\n                        </td>\r\n                    </tr>\r\n                )}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default ProductListComponent;","import { useDispatch } from 'react-redux';\r\nimport { useEffect, useRef } from 'react';\r\nimport { fetchProducts, setPageNumber, setIsPageReset, fetchCategories } from '../redux/adminProductPageSlice';\r\nimport { useProducts } from './useProducts';\r\n\r\n\r\nconst useFetchProducts = () => {\r\n    const dispatch = useDispatch();\r\n    const { categoryId, pageNumber, pageSize, sortOrder, filter, isLoaded, isPageReset } = useProducts();\r\n\r\n    const prevSortOrder = useRef(sortOrder);\r\n\r\n    const dispatchFecthProducts = () => {\r\n        dispatch(fetchProducts({\r\n            categoryId,\r\n            pageNumber,\r\n            pageSize,\r\n            sortOrder,\r\n            filter\r\n        }));\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n\r\n            if (!isLoaded) {\r\n                dispatchFecthProducts();\r\n                dispatch(fetchCategories());\r\n            }\r\n\r\n            else if (pageNumber > 1 && (sortOrder !== prevSortOrder.current) && !isPageReset) {\r\n                dispatch(setPageNumber(1));\r\n                dispatch(setIsPageReset(true));\r\n            }\r\n\r\n            else if (!isPageReset || (isPageReset && pageNumber === 1)) {\r\n\r\n                dispatchFecthProducts();\r\n\r\n                if (isPageReset && pageNumber === 1) {\r\n                    dispatch(setIsPageReset(false));\r\n                }\r\n            }\r\n\r\n            prevSortOrder.current = sortOrder;\r\n    }, [categoryId, pageNumber, pageSize, sortOrder, filter]);\r\n};\r\n\r\nexport default useFetchProducts;","import { useSelector } from 'react-redux';\r\n\r\nexport const useProducts = () => {\r\n\r\n    const categoryId = useSelector((state) => state.adminProductPage.categoryId);\r\n    const products = useSelector((state) => state.adminProductPage.products);\r\n    const pageNumber = useSelector((state) => state.adminProductPage.pageNumber);\r\n    const pageSize = useSelector((state) => state.adminProductPage.pageSize);\r\n    const totalPages = useSelector((state) => state.adminProductPage.totalPages);\r\n    const sortOrder = useSelector((state) => state.adminProductPage.sortOrder);\r\n    const totalProducts = useSelector((state) => state.adminProductPage.totalProducts);\r\n    const isLoaded = useSelector((state) => state.adminProductPage.isLoaded);\r\n    const isPageReset = useSelector((state) => state.adminProductPage.isPageReset);\r\n    const filter = useSelector((state) => state.adminProductPage.filter);\r\n    const categories = useSelector((state) => state.adminProductPage.categories);\r\n\r\n    return {\r\n        products,\r\n        pageNumber,\r\n        pageSize,\r\n        totalPages,\r\n        sortOrder,\r\n        categoryId,\r\n        totalProducts,\r\n        isLoaded,\r\n        isPageReset,\r\n        filter,\r\n        categories\r\n    };\r\n};"],"names":["dispatch","_useProducts","categoryId","pageNumber","pageSize","sortOrder","filter","isLoaded","isPageReset","prevSortOrder","dispatchFecthProducts","useDispatch","useProducts","useRef","fetchProducts","useEffect","current","setPageNumber","setIsPageReset","fetchCategories","products","_jsxs","className","children","_jsx","length","map","product","onClick","window","location","href","concat","id","style","cursor","verticalAlign","src","mainImageUrl","alt","name","maxWidth","height","loading","dangerouslySetInnerHTML","__html","price","discountedPrice","status","inStock","colSpan","useSelector","state","adminProductPage","totalPages","totalProducts","categories"],"sourceRoot":""}