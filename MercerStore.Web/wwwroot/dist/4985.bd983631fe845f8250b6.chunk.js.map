{"version":3,"file":"4985.bd983631fe845f8250b6.chunk.js","mappings":"wKAaA,QAVmC,WAC/B,IAAAA,GAA2CC,EAAAA,EAAAA,KAApCC,EAAUF,EAAVE,WAAYC,EAAUH,EAAVG,WAAYC,EAAQJ,EAARI,SAE/B,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAAC,aACjBJ,EAAa,GAAKC,EAAW,EAAE,MAAII,KAAKC,IAAIN,EAAaC,EAAUF,GAAY,OAAKA,IAG3G,C,gDCTaD,EAAgB,WAazB,MAAO,CACHS,SAXYC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWH,OAAO,IAY3DP,YAXeQ,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWV,UAAU,IAYjEC,UAXaO,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWT,QAAQ,IAY7DU,YAXeH,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWC,UAAU,IAYjEC,WAXcJ,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWE,SAAS,IAY/DC,UAXaL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWG,QAAQ,IAY7DC,aAXgBN,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWI,WAAW,IAYnEC,OAXUP,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWK,KAAK,IAYvDhB,YAXeS,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWX,UAAU,IAczE,C","sources":["webpack://mercerstore/./wwwroot/features/searchPage/components/TotalProductsInfoComponent.jsx","webpack://mercerstore/./wwwroot/features/searchPage/hooks/useSearchPage.jsx"],"sourcesContent":["import React from 'react';\r\nimport {useSearchPage} from '../hooks/useSearchPage';\r\n\r\nconst TotalProductsInfoComponent = () => {\r\n    const {totalItems, pageNumber, pageSize} = useSearchPage();\r\n\r\n    return (\r\n        <div className=\"total-products\">\r\n            Показано {(pageNumber - 1) * pageSize + 1} - {Math.min(pageNumber * pageSize, totalItems)} из {totalItems}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TotalProductsInfoComponent;","import {useSelector} from 'react-redux';\r\n\r\nexport const useSearchPage = () => {\r\n\r\n\r\n    const results = useSelector((state) => state.searchPage.results);\r\n    const pageNumber = useSelector((state) => state.searchPage.pageNumber);\r\n    const pageSize = useSelector((state) => state.searchPage.pageSize);\r\n    const totalPages = useSelector((state) => state.searchPage.totalPages);\r\n    const sortOrder = useSelector((state) => state.searchPage.sortOrder);\r\n    const isLoaded = useSelector((state) => state.searchPage.isLoaded);\r\n    const isPageReset = useSelector((state) => state.searchPage.isPageReset);\r\n    const query = useSelector((state) => state.searchPage.query);\r\n    const totalItems = useSelector((state) => state.searchPage.totalItems);\r\n\r\n    return {\r\n        results,\r\n        pageNumber,\r\n        pageSize,\r\n        totalPages,\r\n        sortOrder,\r\n        isLoaded,\r\n        isPageReset,\r\n        query,\r\n        totalItems\r\n\r\n    };\r\n};"],"names":["_useSearchPage","useSearchPage","totalItems","pageNumber","pageSize","_jsxs","className","children","Math","min","results","useSelector","state","searchPage","totalPages","sortOrder","isLoaded","isPageReset","query"],"sourceRoot":""}