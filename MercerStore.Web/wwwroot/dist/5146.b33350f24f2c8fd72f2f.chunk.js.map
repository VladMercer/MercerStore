{"version":3,"file":"5146.b33350f24f2c8fd72f2f.chunk.js","mappings":"8LAiCA,QA5BkC,WAC9B,IAAOA,GAAYC,EAAAA,EAAAA,KAAZD,SACDE,GAAWC,EAAAA,EAAAA,MAWjB,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mBAAkBC,SAAC,iBACnCF,EAAAA,EAAAA,MAAA,UAAQC,UAAU,cAAcG,MAAOR,EAAUS,SAR5B,SAACC,GAC1B,IALoBC,IAKJC,SAASF,EAAMG,OAAOL,MAAO,IAJ7CN,GAASY,EAAAA,EAAAA,IAAYH,GAMzB,EAKwFL,SAAA,EAC5EC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,KAAIF,SAAC,QACnBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,KAAIF,SAAC,QACnBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,KAAIF,SAAC,QACnBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,KAAIF,SAAC,QACnBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,MAAKF,SAAC,SACpBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,MAAKF,SAAC,aAIpC,C,gDC7BaL,EAAe,WAGxB,IAAMc,GAAYC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,aAAaH,SAAS,IAC/DI,GAAaH,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,aAAaC,UAAU,IACjEnB,GAAWgB,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,aAAalB,QAAQ,IAC7DoB,GAAaJ,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,aAAaE,UAAU,IACjEC,GAAiBL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,aAAaG,cAAc,IACzEC,GAAWN,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,aAAaI,QAAQ,IAC7DC,GAAcP,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,aAAaK,WAAW,IAGzE,MAAO,CACHC,OAHUR,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,aAAaM,KAAK,IAIzDT,UAAAA,EACAI,WAAAA,EACAnB,SAAAA,EACAoB,WAAAA,EACAC,eAAAA,EACAC,SAAAA,EACAC,YAAAA,EAER,C","sources":["webpack://mercerstore/./wwwroot/features/Admin/supplierPage/components/PageSizeSelectorComponent.jsx","webpack://mercerstore/./wwwroot/features/Admin/supplierPage/hooks/useSuppliers.jsx"],"sourcesContent":["import {useDispatch} from 'react-redux';\r\nimport React from 'react';\r\nimport {useSuppliers} from '../hooks/useSuppliers';\r\nimport {setPageSize} from '../redux/supplierPageSlice';\r\n\r\nconst PageSizeSelectorComponent = () => {\r\n    const {pageSize} = useSuppliers();\r\n    const dispatch = useDispatch();\r\n\r\n    const changePageSize = (newPageSize) => {\r\n        dispatch(setPageSize(newPageSize));\r\n    };\r\n\r\n    const handlePageSizeChange = (event) => {\r\n        const newSize = parseInt(event.target.value, 10);\r\n        changePageSize(newSize);\r\n    };\r\n\r\n    return (\r\n        <div className=\"input-group mb-3\">\r\n            <span className=\"input-group-text\">Показывать:</span>\r\n            <select className=\"form-select\" value={pageSize} onChange={handlePageSizeChange}>\r\n                <option value=\"30\">30</option>\r\n                <option value=\"45\">45</option>\r\n                <option value=\"60\">60</option>\r\n                <option value=\"90\">90</option>\r\n                <option value=\"120\">120</option>\r\n                <option value=\"150\">150</option>\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageSizeSelectorComponent;","import {useSelector} from 'react-redux';\r\n\r\nexport const useSuppliers = () => {\r\n\r\n\r\n    const suppliers = useSelector((state) => state.supplierPage.suppliers);\r\n    const pageNumber = useSelector((state) => state.supplierPage.pageNumber);\r\n    const pageSize = useSelector((state) => state.supplierPage.pageSize);\r\n    const totalPages = useSelector((state) => state.supplierPage.totalPages);\r\n    const totalSuppliers = useSelector((state) => state.supplierPage.totalSuppliers);\r\n    const isLoaded = useSelector((state) => state.supplierPage.isLoaded);\r\n    const isPageReset = useSelector((state) => state.supplierPage.isPageReset);\r\n    const query = useSelector((state) => state.supplierPage.query);\r\n\r\n    return {\r\n        query,\r\n        suppliers,\r\n        pageNumber,\r\n        pageSize,\r\n        totalPages,\r\n        totalSuppliers,\r\n        isLoaded,\r\n        isPageReset,\r\n    };\r\n};"],"names":["pageSize","useSuppliers","dispatch","useDispatch","_jsxs","className","children","_jsx","value","onChange","event","newPageSize","parseInt","target","setPageSize","suppliers","useSelector","state","supplierPage","pageNumber","totalPages","totalSuppliers","isLoaded","isPageReset","query"],"sourceRoot":""}