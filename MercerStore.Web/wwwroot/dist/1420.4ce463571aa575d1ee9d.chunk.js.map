{"version":3,"file":"1420.4ce463571aa575d1ee9d.chunk.js","mappings":"kNAQWA,GAAW,EAAAC,EAAA,IAAyB,CAC7CC,UAAW,WACXC,eAAgBC,EAAA,EAChBC,wBAAyB,OACzBC,0BAA2B,CAAC,OAAQ,QACpCC,eAAgB,CAAC,CACfC,SAAU,QACVC,SAAUC,EAAA,GACT,CACDF,SAAU,QACVC,SAAUE,EAAA,IAEZC,cAAe,O,sDCajB,QA3B4B,WACxB,IAAAC,GAA0BC,EAAAA,EAAAA,KAAnBC,EAAKF,EAALE,MAAOC,EAAQH,EAARG,SAEd,GCHoB,WACpB,IAAMC,GAAWC,EAAAA,EAAAA,MACVF,GAAYF,EAAAA,EAAAA,KAAZE,UAEPG,EAAAA,EAAAA,YAAU,WACDH,GACDC,GAASG,EAAAA,EAAAA,KAEjB,GAAG,CAACJ,EAAUC,GAClB,CDPII,IACKL,EAAU,OAAOM,EAAAA,EAAAA,KAAA,OAAAC,SAAK,gBAE3B,IAAMC,EAAO,CACT,CAACC,KAAM,OAAQC,MAAOX,EAAMY,OAC5B,CAACF,KAAM,SAAUC,MAAOX,EAAMa,QAC9B,CAACH,KAAM,QAASC,MAAOX,EAAMc,SAC7B,CAACJ,KAAM,MAAOC,MAAOX,EAAMe,SAG/B,OACIC,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAACC,MAAO,QAASC,OAAQ,SAASX,SAAA,EAC1CD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,aACJD,EAAAA,EAAAA,KAACa,EAAAA,EAAmB,CAACF,MAAM,OAAOC,OAAO,MAAKX,UAC1CQ,EAAAA,EAAAA,MAAC/B,EAAQ,CAACwB,KAAMA,EAAKD,SAAA,EACjBD,EAAAA,EAAAA,KAACZ,EAAAA,EAAK,CAAC0B,QAAQ,UACfd,EAAAA,EAAAA,KAACX,EAAAA,EAAK,KACNW,EAAAA,EAAAA,KAACe,EAAAA,EAAO,KACRf,EAAAA,EAAAA,KAAClB,EAAAA,EAAG,CAACgC,QAAQ,QAAQE,KAAK,mBAK9C,C,gDE7BaxB,EAAa,WAUtB,MAAO,CACHC,OARUwB,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAW1B,KAAK,IASvD2B,SARYH,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWC,OAAO,IAS3DC,UARaJ,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWE,QAAQ,IAS7DC,OARUL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWG,KAAK,IASvDC,WARcN,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWI,SAAS,IAS/D7B,UARauB,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWzB,QAAQ,IAUrE,C","sources":["webpack://mercerstore/./node_modules/recharts/es6/chart/BarChart.js","webpack://mercerstore/./wwwroot/features/Admin/metricPage/components/SalesChartComponent.jsx","webpack://mercerstore/./wwwroot/features/Admin/metricPage/hooks/useFetchMetrics.jsx","webpack://mercerstore/./wwwroot/features/Admin/metricPage/hooks/useMetrics.jsx"],"sourcesContent":["/**\n * @fileOverview Bar Chart\n */\nimport { generateCategoricalChart } from './generateCategoricalChart';\nimport { Bar } from '../cartesian/Bar';\nimport { XAxis } from '../cartesian/XAxis';\nimport { YAxis } from '../cartesian/YAxis';\nimport { formatAxisMap } from '../util/CartesianUtils';\nexport var BarChart = generateCategoricalChart({\n  chartName: 'BarChart',\n  GraphicalChild: Bar,\n  defaultTooltipEventType: 'axis',\n  validateTooltipEventTypes: ['axis', 'item'],\n  axisComponents: [{\n    axisType: 'xAxis',\n    AxisComp: XAxis\n  }, {\n    axisType: 'yAxis',\n    AxisComp: YAxis\n  }],\n  formatAxisMap: formatAxisMap\n});","import React from \"react\";\r\nimport {Bar, BarChart, ResponsiveContainer, Tooltip, XAxis, YAxis} from \"recharts\";\r\nimport {useMetrics} from \"../hooks/useMetrics\";\r\nimport useFetchMetrics from \"../hooks/useFetchMetrics\";\r\n\r\n\r\nconst SalesChartComponent = () => {\r\n    const {sales, isLoaded} = useMetrics();\r\n    useFetchMetrics();\r\n    if (!isLoaded) return <div>Загрузка...</div>;\r\n\r\n    const data = [\r\n        {name: \"День\", value: sales.daily},\r\n        {name: \"Неделя\", value: sales.weekly},\r\n        {name: \"Месяц\", value: sales.monthly},\r\n        {name: \"Год\", value: sales.yearly},\r\n    ];\r\n\r\n    return (\r\n        <div style={{width: \"400px\", height: \"300px\"}}>\r\n            <h3>Продажи</h3>\r\n            <ResponsiveContainer width=\"100%\" height=\"90%\">\r\n                <BarChart data={data}>\r\n                    <XAxis dataKey=\"name\"/>\r\n                    <YAxis/>\r\n                    <Tooltip/>\r\n                    <Bar dataKey=\"value\" fill=\"#8884d8\"/>\r\n                </BarChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SalesChartComponent;\r\n","import {useDispatch} from 'react-redux';\r\nimport {useEffect} from 'react';\r\nimport {fetchMetrics} from '../redux/metricPageSlice';\r\nimport {useMetrics} from './useMetrics';\r\n\r\n\r\nconst useFetchMetrics = () => {\r\n    const dispatch = useDispatch();\r\n    const {isLoaded} = useMetrics();\r\n\r\n    useEffect(() => {\r\n        if (!isLoaded) {\r\n            dispatch(fetchMetrics());\r\n        }\r\n    }, [isLoaded, dispatch]);\r\n};\r\n\r\nexport default useFetchMetrics;","import {useSelector} from \"react-redux\";\r\n\r\nexport const useMetrics = () => {\r\n\r\n\r\n    const sales = useSelector((state) => state.metricPage.sales);\r\n    const reviews = useSelector((state) => state.metricPage.reviews);\r\n    const invoices = useSelector((state) => state.metricPage.invoices);\r\n    const users = useSelector((state) => state.metricPage.users);\r\n    const suppliers = useSelector((state) => state.metricPage.suppliers);\r\n    const isLoaded = useSelector((state) => state.metricPage.isLoaded);\r\n\r\n    return {\r\n        sales,\r\n        reviews,\r\n        invoices,\r\n        users,\r\n        suppliers,\r\n        isLoaded\r\n    };\r\n};"],"names":["BarChart","generateCategoricalChart","chartName","GraphicalChild","Bar","defaultTooltipEventType","validateTooltipEventTypes","axisComponents","axisType","AxisComp","XAxis","YAxis","formatAxisMap","_useMetrics","useMetrics","sales","isLoaded","dispatch","useDispatch","useEffect","fetchMetrics","useFetchMetrics","_jsx","children","data","name","value","daily","weekly","monthly","yearly","_jsxs","style","width","height","ResponsiveContainer","dataKey","Tooltip","fill","useSelector","state","metricPage","reviews","invoices","users","suppliers"],"sourceRoot":""}