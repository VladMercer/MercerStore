{"version":3,"file":"5284.28e6bad6a66da03f8e5a.chunk.js","mappings":"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","sources":["webpack://mercerstore/./wwwroot/features/Admin/invoicePage/components/InvoicesListComponent.jsx","webpack://mercerstore/./wwwroot/features/Admin/invoicePage/hooks/useFetchInvoices.jsx","webpack://mercerstore/./wwwroot/features/Admin/invoicePage/hooks/useInvoices.jsx"],"sourcesContent":["import React, { useMemo } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useInvoices } from \"../hooks/useInvoices\";\r\nimport useFetchInvoices from \"../hooks/useFetchInvoices\";\r\n\r\nconst InvoicesListComponent = () => {\r\n    useFetchInvoices();\r\n    const dispatch = useDispatch();\r\n    const { invoices } = useInvoices();\r\n\r\n    const handleSupplierClick = (supplierId) => {\r\n        window.location.href = `/admin/supplier/update/${supplierId}`;\r\n    };\r\n    \r\n    const handleInvoiceClick = (invoiceId) => {\r\n        window.location.href = `/admin/invoice/update/${invoiceId}`;\r\n    };\r\n    const handleManagerClick = (managerId) => {\r\n        window.location.href = `/admin/user/update/${managerId}`;\r\n    };\r\n\r\n    const renderInvoices = useMemo(() => {\r\n        if (!invoices || invoices.length === 0) {\r\n            return (\r\n                <tr>\r\n                    <td colSpan=\"6\" className=\"text-center\">\r\n                        \r\n                    </td>\r\n                </tr>\r\n            );\r\n        }\r\n\r\n        return invoices.map((invoice) => (\r\n            <tr key={invoice.id} style={{ cursor: \"pointer\", verticalAlign: \"middle\" }}>\r\n             \r\n                <td\r\n                    className=\"text-center\"\r\n                    onClick={() => handleInvoiceClick(invoice.id)}\r\n                >\r\n                    {invoice.id}\r\n                </td>\r\n\r\n             \r\n                <td className=\"text-start\">\r\n                    <div\r\n                        onClick={() => handleSupplierClick(invoice.supplierId)}\r\n                        style={{ cursor: \"pointer\", fontWeight: \"bold\" }}\r\n                    >\r\n                        {invoice.companyName || \"—\"}\r\n                    </div>\r\n                    <div\r\n                        onClick={() => handleManagerClick(invoice.managerId)}\r\n                        style={{ cursor: \"pointer\" }}\r\n                    >\r\n                      {invoice.managerId}\r\n                    </div>\r\n                </td>\r\n\r\n                <td\r\n                    className=\"text-start\"\r\n                    onClick={() => handleInvoiceClick(invoice.id)}\r\n                >\r\n                    <div>Получено: {new Date(invoice.dateReceived).toLocaleDateString()}</div>\r\n                    <div>Оплачено: {invoice.paymentDate ? new Date(invoice.paymentDate).toLocaleDateString() : \"—\"}</div>\r\n                </td>\r\n\r\n             \r\n                <td\r\n                    className=\"text-start\"\r\n                    onClick={() => handleInvoiceClick(invoice.id)}\r\n                >\r\n                    <div>{invoice.totalAmount} ₽</div>\r\n                    <div>{invoice.status}</div>\r\n                </td>\r\n\r\n              \r\n                <td\r\n                    className=\"text-start\"\r\n                    onClick={() => handleInvoiceClick(invoice.id)}\r\n                >\r\n                    <div>{invoice.phone || \"—\"}</div>\r\n                    <div>{invoice.email || \"—\"}</div>\r\n                </td>\r\n            </tr>\r\n        ));\r\n    }, [invoices]);\r\n\r\n    return (\r\n        <table className=\"table table-striped table-hover table-responsive-md table-sm\">\r\n            <thead className=\"thead-dark\">\r\n                <tr>\r\n                    <th className=\"text-center\">ID</th>\r\n                    <th className=\"text-center\">Компания и Менеджер</th>\r\n                    <th className=\"text-center\">Даты</th>\r\n                    <th className=\"text-center\">Сумма и Статус</th>\r\n                    <th className=\"text-center\">Контакты</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>{renderInvoices}</tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default InvoicesListComponent;","import { useDispatch } from 'react-redux';\r\nimport { useEffect, useRef } from 'react';\r\nimport { setPageNumber, setIsPageReset, fetchInvoices } from '../redux/invoicePageSlice';\r\nimport { useInvoices } from './useInvoices';\r\n\r\n\r\nconst useFetchInvoices = () => {\r\n    const dispatch = useDispatch();\r\n    const { pageNumber, pageSize, sortOrder, timePeriodFilter, filter, isLoaded, isPageReset, query } = useInvoices();\r\n\r\n    const prevSortOrder = useRef(sortOrder);\r\n    const prevQuery = useRef(query);\r\n\r\n    const dispatchFetchInvoices = () => {\r\n        dispatch(fetchInvoices({\r\n            pageNumber, pageSize, sortOrder, timePeriodFilter, filter, query\r\n        }));\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n\r\n            if (!isLoaded) {\r\n                dispatchFetchInvoices();\r\n            }\r\n\r\n            else if (pageNumber > 1 && (sortOrder !== prevSortOrder.current || query !== prevQuery.current) && !isPageReset) {\r\n                dispatch(setPageNumber(1));\r\n                dispatch(setIsPageReset(true));\r\n            }\r\n\r\n            else if (!isPageReset || (isPageReset && pageNumber === 1)) {\r\n\r\n                dispatchFetchInvoices();\r\n\r\n                if (isPageReset && pageNumber === 1) {\r\n                    dispatch(setIsPageReset(false));\r\n                }\r\n            }\r\n\r\n        prevSortOrder.current = sortOrder;\r\n        prevQuery.current = query; \r\n    }, [pageNumber, pageSize, sortOrder, timePeriodFilter, filter, query]);\r\n};\r\n\r\nexport default useFetchInvoices;","import { useSelector } from 'react-redux';\r\n\r\nexport const useInvoices = () => {\r\n\r\n    \r\n    const invoices = useSelector((state) => state.invoicePage.invoices);\r\n    const pageNumber = useSelector((state) => state.invoicePage.pageNumber);\r\n    const pageSize = useSelector((state) => state.invoicePage.pageSize);\r\n    const totalPages = useSelector((state) => state.invoicePage.totalPages);\r\n    const sortOrder = useSelector((state) => state.invoicePage.sortOrder);\r\n    const totalInvoices = useSelector((state) => state.invoicePage.totalInvoices);\r\n    const isLoaded = useSelector((state) => state.invoicePage.isLoaded);\r\n    const isPageReset = useSelector((state) => state.invoicePage.isPageReset);\r\n    const timePeriodFilter = useSelector((state) => state.invoicePage.timePeriodFilter);\r\n    const filter = useSelector((state) => state.invoicePage.filter);\r\n    const query = useSelector((state) => state.invoicePage.query);\r\n\r\n    return {\r\n        query,\r\n        invoices,\r\n        pageNumber,\r\n        pageSize,\r\n        totalPages,\r\n        sortOrder,\r\n        totalInvoices,\r\n        isLoaded,\r\n        isPageReset,\r\n        timePeriodFilter,\r\n        filter,\r\n    };\r\n};"],"names":["dispatch","_useInvoices","pageNumber","pageSize","sortOrder","timePeriodFilter","filter","isLoaded","isPageReset","query","prevSortOrder","prevQuery","dispatchFetchInvoices","useDispatch","useInvoices","useRef","fetchInvoices","useEffect","current","setPageNumber","setIsPageReset","invoices","handleInvoiceClick","invoiceId","window","location","href","concat","renderInvoices","useMemo","length","map","invoice","_jsxs","style","cursor","verticalAlign","children","_jsx","className","onClick","id","supplierId","fontWeight","companyName","managerId","Date","dateReceived","toLocaleDateString","paymentDate","totalAmount","status","phone","email","colSpan","useSelector","state","invoicePage","totalPages","totalInvoices"],"sourceRoot":""}