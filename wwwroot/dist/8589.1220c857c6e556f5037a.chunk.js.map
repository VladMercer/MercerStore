{"version":3,"file":"8589.1220c857c6e556f5037a.chunk.js","mappings":"4LA8BA,QAzBsB,WAClB,IAAMA,GAAWC,EAAAA,EAAAA,MACTC,GAAcC,EAAAA,EAAAA,KAAdD,UAMR,OACIE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mBAAkBC,SAAC,iBACnCF,EAAAA,EAAAA,MAAA,UAAQC,UAAU,cAAcG,MAAON,EAAWO,SAPjC,SAACC,GACtBV,GAASW,EAAAA,EAAAA,IAAaD,EAAME,OAAOJ,OACvC,EAKqFF,SAAA,EACzEC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,iBAAgBF,SAAC,mBAC/BC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,gBAAeF,SAAC,oBAC9BC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,UAASF,SAAC,eACxBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,WAAUF,SAAC,eACzBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,cAAaF,SAAC,2BAC5BC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,eAAcF,SAAC,yBAC7BC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,WAAUF,SAAC,kBACzBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,YAAWF,SAAC,sBAI1C,C,gDC1BaH,EAAa,WAGtB,IAAMU,GAAUC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWH,OAAO,IACzDI,GAAaH,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWC,UAAU,IAC/DC,GAAWJ,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWE,QAAQ,IAC3DC,GAAaL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWG,UAAU,IAC/DjB,GAAYY,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWd,SAAS,IAC7DkB,GAAeN,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWI,YAAY,IACnEC,GAAWP,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWK,QAAQ,IAC3DC,GAAcR,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWM,WAAW,IACjEC,GAAmBT,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWO,gBAAgB,IAC3EC,GAASV,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWQ,MAAM,IAG7D,MAAO,CACHC,OAHUX,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWS,KAAK,IAIvDZ,QAAAA,EACAI,WAAAA,EACAC,SAAAA,EACAC,WAAAA,EACAjB,UAAAA,EACAkB,aAAAA,EACAC,SAAAA,EACAC,YAAAA,EACAC,iBAAAA,EACAC,OAAAA,EAER,C","sources":["webpack://mercerstore/./wwwroot/features/Admin/reviewPage/components/SortComponent.jsx","webpack://mercerstore/./wwwroot/features/Admin/reviewPage/hooks/useReviews.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useReviews } from \"../hooks/useReviews\";\r\nimport { setSortOrder } from \"../redux/reviewPageSlice\";\r\n\r\nconst SortComponent = () => {\r\n    const dispatch = useDispatch();\r\n    const { sortOrder } = useReviews();\r\n\r\n    const handleSortChange = (event) => {\r\n        dispatch(setSortOrder(event.target.value));\r\n    };\r\n    \r\n    return (\r\n        <div className=\"input-group mb-3\">\r\n            <span className=\"input-group-text\">Сортировка:</span>\r\n            <select className=\"form-select\" value={sortOrder} onChange={handleSortChange}>\r\n                <option value=\"CreateDateDesc\">Сначала новые</option>\r\n                <option value=\"CreateDateAsc\">Сначала старые</option>\r\n                <option value=\"NameAsc\">Имя (А-Я)</option>\r\n                <option value=\"NameDesc\">Имя (Я-А)</option>\r\n                <option value=\"EditDateAsc\">Редактированы недавно</option>\r\n                <option value=\"EditDateDesc\">Редактированы давно</option>\r\n                <option value=\"ValueAsc\">Оценка (1-5)</option>\r\n                <option value=\"ValueDesc\">Оценка (5-1)</option>\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SortComponent;","import { useSelector } from 'react-redux';\r\n\r\nexport const useReviews = () => {\r\n\r\n    \r\n    const reviews = useSelector((state) => state.reviewPage.reviews);\r\n    const pageNumber = useSelector((state) => state.reviewPage.pageNumber);\r\n    const pageSize = useSelector((state) => state.reviewPage.pageSize);\r\n    const totalPages = useSelector((state) => state.reviewPage.totalPages);\r\n    const sortOrder = useSelector((state) => state.reviewPage.sortOrder);\r\n    const totalReviews = useSelector((state) => state.reviewPage.totalReviews);\r\n    const isLoaded = useSelector((state) => state.reviewPage.isLoaded);\r\n    const isPageReset = useSelector((state) => state.reviewPage.isPageReset);\r\n    const timePeriodFilter = useSelector((state) => state.reviewPage.timePeriodFilter);\r\n    const filter = useSelector((state) => state.reviewPage.filter);\r\n    const query = useSelector((state) => state.reviewPage.query);\r\n\r\n    return {\r\n        query,\r\n        reviews,\r\n        pageNumber,\r\n        pageSize,\r\n        totalPages,\r\n        sortOrder,\r\n        totalReviews,\r\n        isLoaded,\r\n        isPageReset,\r\n        timePeriodFilter,\r\n        filter,\r\n    };\r\n};"],"names":["dispatch","useDispatch","sortOrder","useReviews","_jsxs","className","children","_jsx","value","onChange","event","setSortOrder","target","reviews","useSelector","state","reviewPage","pageNumber","pageSize","totalPages","totalReviews","isLoaded","isPageReset","timePeriodFilter","filter","query"],"sourceRoot":""}