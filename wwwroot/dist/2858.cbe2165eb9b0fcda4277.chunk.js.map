{"version":3,"file":"2858.cbe2165eb9b0fcda4277.chunk.js","mappings":"4LAkCA,QA7B4B,WACxB,IAAMA,GAAWC,EAAAA,EAAAA,MACjBC,GAAmCC,EAAAA,EAAAA,KAA3BC,EAAUF,EAAVE,WAAYC,EAAUH,EAAVG,WAOpB,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mBAAkBC,SAAC,gBACnCF,EAAAA,EAAAA,MAAA,UACIC,UAAU,cACVG,MAAOL,GAAc,GACrBM,SAXiB,SAACC,GAC1B,IAAMC,EAAgBD,EAAME,OAAOJ,MACnCV,GAASe,EAAAA,EAAAA,IAAcF,GAC3B,EAQ2CL,SAAA,EAE/BC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,GAAEF,SAAC,kBAChBJ,GACGA,EAAWY,KAAI,SAACC,GAAQ,OACpBR,EAAAA,EAAAA,KAAA,UAA0BC,MAAOO,EAASC,GAAGV,SACxCS,EAASE,MADDF,EAASC,GAEb,SAKjC,C,gDC9Baf,EAAc,WAEvB,IAAME,GAAae,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBjB,UAAU,IAY3E,MAAO,CACHkB,UAZaH,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBC,QAAQ,IAanEC,YAZeJ,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBE,UAAU,IAavEC,UAZaL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBG,QAAQ,IAanEC,YAZeN,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBI,UAAU,IAavEC,WAZcP,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBK,SAAS,IAarEtB,WAAAA,EACAuB,eAbkBR,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBM,aAAa,IAc7EC,UAbaT,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBO,QAAQ,IAcnEC,aAbgBV,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBQ,WAAW,IAczEC,QAbWX,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBS,MAAM,IAc/D3B,YAbegB,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBlB,UAAU,IAe/E,C","sources":["webpack://mercerstore/./wwwroot/features/Admin/productPage/components/CategoriesComponent.jsx","webpack://mercerstore/./wwwroot/features/Admin/productPage/hooks/useProducts.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useProducts } from '../hooks/useProducts';\nimport { setCategoryId, fetchCategories } from '../redux/adminProductPageSlice';\n\nconst CategoriesComponent = () => {\n    const dispatch = useDispatch();\n    const { categories, categoryId } = useProducts();\n   \n    const handleCategoryChange = (event) => {\n        const newCategoryId = event.target.value;\n        dispatch(setCategoryId(newCategoryId));\n    };\n\n    return (\n        <div className=\"input-group\">\n            <span className=\"input-group-text\">Категория:</span>\n            <select\n                className=\"form-select\"\n                value={categoryId || ''}\n                onChange={handleCategoryChange}\n            >\n                <option value=\"\">Все категории</option>\n                {categories &&\n                    categories.map((category) => (\n                        <option key={category.id} value={category.id}>\n                            {category.name}\n                        </option>\n                    ))}\n            </select>\n        </div>\n    );\n};\n\nexport default CategoriesComponent;","import { useSelector } from 'react-redux';\r\n\r\nexport const useProducts = () => {\r\n\r\n    const categoryId = useSelector((state) => state.adminProductPage.categoryId);\r\n    const products = useSelector((state) => state.adminProductPage.products);\r\n    const pageNumber = useSelector((state) => state.adminProductPage.pageNumber);\r\n    const pageSize = useSelector((state) => state.adminProductPage.pageSize);\r\n    const totalPages = useSelector((state) => state.adminProductPage.totalPages);\r\n    const sortOrder = useSelector((state) => state.adminProductPage.sortOrder);\r\n    const totalProducts = useSelector((state) => state.adminProductPage.totalProducts);\r\n    const isLoaded = useSelector((state) => state.adminProductPage.isLoaded);\r\n    const isPageReset = useSelector((state) => state.adminProductPage.isPageReset);\r\n    const filter = useSelector((state) => state.adminProductPage.filter);\r\n    const categories = useSelector((state) => state.adminProductPage.categories);\r\n\r\n    return {\r\n        products,\r\n        pageNumber,\r\n        pageSize,\r\n        totalPages,\r\n        sortOrder,\r\n        categoryId,\r\n        totalProducts,\r\n        isLoaded,\r\n        isPageReset,\r\n        filter,\r\n        categories\r\n    };\r\n};"],"names":["dispatch","useDispatch","_useProducts","useProducts","categories","categoryId","_jsxs","className","children","_jsx","value","onChange","event","newCategoryId","target","setCategoryId","map","category","id","name","useSelector","state","adminProductPage","products","pageNumber","pageSize","totalPages","sortOrder","totalProducts","isLoaded","isPageReset","filter"],"sourceRoot":""}