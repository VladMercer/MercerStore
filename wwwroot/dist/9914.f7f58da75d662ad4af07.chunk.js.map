{"version":3,"file":"9914.f7f58da75d662ad4af07.chunk.js","mappings":"8LAiCA,QA5BkC,WAC9B,IAAQA,GAAaC,EAAAA,EAAAA,KAAbD,SACFE,GAAWC,EAAAA,EAAAA,MAWjB,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mBAAkBC,SAAC,iBACnCF,EAAAA,EAAAA,MAAA,UAAQC,UAAU,cAAcG,MAAOR,EAAUS,SAR5B,SAACC,GAC1B,IALoBC,IAKJC,SAASF,EAAMG,OAAOL,MAAO,IAJ7CN,GAASY,EAAAA,EAAAA,IAAYH,GAMzB,EAKwFL,SAAA,EAC5EC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,KAAIF,SAAC,QACnBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,KAAIF,SAAC,QACnBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,KAAIF,SAAC,QACnBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,KAAIF,SAAC,QACnBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,MAAKF,SAAC,SACpBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,MAAKF,SAAC,aAIpC,C,gDC7BaL,EAAY,WAerB,MAAO,CACHc,QAbWC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUH,MAAM,IAcxDI,YAbeH,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUC,UAAU,IAchEnB,UAbagB,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUlB,QAAQ,IAc5DoB,YAbeJ,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUE,UAAU,IAchEC,WAbcL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUG,SAAS,IAc9DC,aAbgBN,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUI,WAAW,IAclEC,UAbaP,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUK,QAAQ,IAc5DC,aAbgBR,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUM,WAAW,IAclEC,kBAbqBT,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUO,gBAAgB,IAc5EC,cAbiBV,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUQ,YAAY,IAcpEC,OAbUX,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUS,KAAK,IAe9D,C","sources":["webpack://mercerstore/./wwwroot/features/Admin/orderPage/components/PageSizeSelectorComponent.jsx","webpack://mercerstore/./wwwroot/features/Admin/orderPage/hooks/useOrders.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\r\nimport React from 'react';\r\nimport { useOrders } from '../hooks/useOrders';\r\nimport { setPageSize } from '../redux/orderPageSlice';\r\n\r\nconst PageSizeSelectorComponent = () => {\r\n    const { pageSize } = useOrders();\r\n    const dispatch = useDispatch();\r\n\r\n    const changePageSize = (newPageSize) => {\r\n        dispatch(setPageSize(newPageSize));\r\n    };\r\n\r\n    const handlePageSizeChange = (event) => {\r\n        const newSize = parseInt(event.target.value, 10);\r\n        changePageSize(newSize);\r\n    };\r\n\r\n    return (\r\n        <div className=\"input-group mb-3\">\r\n            <span className=\"input-group-text\">Показывать:</span>\r\n            <select className=\"form-select\" value={pageSize} onChange={handlePageSizeChange}>\r\n                <option value=\"30\">30</option>\r\n                <option value=\"45\">45</option>\r\n                <option value=\"60\">60</option>\r\n                <option value=\"90\">90</option>\r\n                <option value=\"120\">120</option>\r\n                <option value=\"150\">150</option>\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageSizeSelectorComponent;","import { useSelector } from 'react-redux';\r\n\r\nexport const useOrders = () => {\r\n\r\n    \r\n    const orders = useSelector((state) => state.orderPage.orders);\r\n    const pageNumber = useSelector((state) => state.orderPage.pageNumber);\r\n    const pageSize = useSelector((state) => state.orderPage.pageSize);\r\n    const totalPages = useSelector((state) => state.orderPage.totalPages);\r\n    const sortOrder = useSelector((state) => state.orderPage.sortOrder);\r\n    const totalOrders = useSelector((state) => state.orderPage.totalOrders);\r\n    const isLoaded = useSelector((state) => state.orderPage.isLoaded);\r\n    const isPageReset = useSelector((state) => state.orderPage.isPageReset);\r\n    const timePeriodFilter = useSelector((state) => state.orderPage.timePeriodFilter);\r\n    const statusFilter = useSelector((state) => state.orderPage.statusFilter);\r\n    const query = useSelector((state) => state.orderPage.query);\r\n\r\n    return {\r\n        orders,\r\n        pageNumber,\r\n        pageSize,\r\n        totalPages,\r\n        sortOrder,\r\n        totalOrders,\r\n        isLoaded,\r\n        isPageReset,\r\n        timePeriodFilter,\r\n        statusFilter,\r\n        query\r\n    };\r\n};"],"names":["pageSize","useOrders","dispatch","useDispatch","_jsxs","className","children","_jsx","value","onChange","event","newPageSize","parseInt","target","setPageSize","orders","useSelector","state","orderPage","pageNumber","totalPages","sortOrder","totalOrders","isLoaded","isPageReset","timePeriodFilter","statusFilter","query"],"sourceRoot":""}