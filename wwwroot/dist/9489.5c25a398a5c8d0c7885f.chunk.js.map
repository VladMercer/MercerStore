{"version":3,"file":"9489.5c25a398a5c8d0c7885f.chunk.js","mappings":"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","sources":["webpack://mercerstore/./wwwroot/features/cart/components/AddToCartButton.jsx","webpack://mercerstore/./wwwroot/features/cart/hooks/useCart.jsx","webpack://mercerstore/./wwwroot/features/categoryPage/components/ProductListComponent.jsx","webpack://mercerstore/./wwwroot/features/categoryPage/hooks/useFetchCategoryProducts.jsx","webpack://mercerstore/./wwwroot/features/categoryPage/hooks/useCategoryPriceRange.jsx","webpack://mercerstore/./wwwroot/features/categoryPage/hooks/useCategoryProducts.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nimport { useCart } from '../hooks/useCart';\r\n\r\n\r\nconst AddToCartButton = ({ productId }) => {\r\n    const { addToCart } = useCart();\r\n\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-outline-warning\"\r\n            onClick={() => addToCart(productId)}>\r\n            <i className=\"fas fa-shopping-cart\"></i> Добавить в корзину\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default AddToCartButton;","import { useSelector, useDispatch } from 'react-redux';\r\nimport { addToCart, removeFromCart } from '../redux/cartSlice';\r\n\r\nexport const useCart = () => {\r\n    const dispatch = useDispatch();\r\n    const { items, totalPrice, itemCount } = useSelector((state) => state.cart);\r\n\r\n    return {\r\n        items,\r\n        totalPrice,\r\n        itemCount,\r\n        addToCart: (productId) => dispatch(addToCart(productId)),\r\n        removeFromCart: (productId) => dispatch(removeFromCart(productId)),\r\n    };\r\n};","import React from 'react';\r\nimport AddToCartButton from '../../cart/components/AddToCartButton';\r\nimport { useCategoryProducts } from '../../categoryPage/hooks/useCategoryProducts';\r\nimport useFetchCategoryProducts from '../hooks/useFetchCategoryProducts';\r\nconst ProductListComponent = () => {\r\n    useFetchCategoryProducts();\r\n    const { products } = useCategoryProducts();\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            {products && products.length > 0 ? (\r\n                products.map(product => (\r\n                    <div className=\"col-lg-4 col-sm-6 mb-3\" key={product.id}>\r\n                        <div className=\"product-card\">\r\n                            <div className=\"product-thumb\">\r\n                                <a href={`/product/details/${product.id}`}>\r\n                                    <img src={product.mainImageUrl} alt=\"фотокарточка\" />\r\n                                </a>\r\n                            </div>\r\n                            <div className=\"product-details\">\r\n                                <h4>\r\n                                    <a\r\n                                        href={`/product/details/${product.id}`}\r\n                                        dangerouslySetInnerHTML={{ __html: product.name }}\r\n                                    ></a>\r\n                                </h4>\r\n                                <p className=\"product-excerpt\">{product.description}</p>\r\n                                <div className=\"product-bottom-details d-flex justify-content-between align-items-center\">\r\n                                    {product.discountedPrice ? (\r\n                                        <div className=\"price-container\">\r\n                                            <small className=\"old-price-card\">\r\n                                                {product.price.toLocaleString()}₽\r\n                                            </small>\r\n                                            <div className=\"product-price\">\r\n                                                {product.discountedPrice.toLocaleString()}₽\r\n                                            </div>\r\n                                        </div>\r\n                                    ) : (\r\n                                        <div className=\"product-price\">\r\n                                            {product.price.toLocaleString()}₽\r\n                                        </div>\r\n                                    )}\r\n                                    <AddToCartButton productId={product.id} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>Нет продуктов</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductListComponent;","import { useDispatch } from 'react-redux';\r\nimport { useEffect, useRef } from 'react';\r\nimport { fetchProducts, setPageNumber, setIsPageReset } from '../redux/categorySlice';\r\nimport { useCategoryProducts } from './useCategoryProducts';\r\nimport { useCategoryPriceRange } from './useCategoryPriceRange';\r\n\r\nconst useFetchCategoryProducts = () => {\r\n    const dispatch = useDispatch();\r\n    const { selectedMinPrice, selectedMaxPrice, isPriceRangeLoaded } = useCategoryPriceRange();\r\n    const { categoryId, pageNumber, pageSize, sortOrder, isLoaded, isPageReset } = useCategoryProducts();\r\n\r\n    const prevSortOrder = useRef(sortOrder);\r\n    const prevMinPrice = useRef(selectedMinPrice);\r\n    const prevMaxPrice = useRef(selectedMaxPrice);\r\n\r\n    const dispatchFecthProducts = () => {\r\n        dispatch(fetchProducts({\r\n            categoryId,\r\n            pageNumber,\r\n            pageSize,\r\n            sortOrder,\r\n            minPrice: selectedMinPrice,\r\n            maxPrice: selectedMaxPrice,\r\n        }));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (categoryId && isPriceRangeLoaded) {\r\n\r\n            if (!isLoaded) {\r\n                dispatchFecthProducts();\r\n            }\r\n\r\n            else if (pageNumber > 1 && (sortOrder !== prevSortOrder.current ||\r\n                selectedMinPrice !== prevMinPrice.current ||\r\n                selectedMaxPrice !== prevMaxPrice.current) && !isPageReset) {\r\n                dispatch(setPageNumber(1));\r\n                dispatch(setIsPageReset(true));\r\n\r\n            }\r\n\r\n            else if (!isPageReset || (isPageReset && pageNumber === 1)) {\r\n\r\n                dispatchFecthProducts();\r\n\r\n                if (isPageReset && pageNumber === 1) {\r\n                    dispatch(setIsPageReset(false));\r\n                }\r\n            }\r\n\r\n            prevSortOrder.current = sortOrder;\r\n            prevMinPrice.current = selectedMinPrice;\r\n            prevMaxPrice.current = selectedMaxPrice;\r\n        }\r\n    }, [isPriceRangeLoaded, pageNumber, pageSize, sortOrder, selectedMinPrice, selectedMaxPrice]);\r\n};\r\n\r\nexport default useFetchCategoryProducts;","import { useSelector } from 'react-redux';\r\n  \r\nexport const useCategoryPriceRange = () => {\r\n   \r\n    const minPrice = useSelector((state) => state.category.minPrice);\r\n    const maxPrice = useSelector((state) => state.category.maxPrice);\r\n    const selectedMinPrice = useSelector((state) => state.category.selectedMinPrice);\r\n    const selectedMaxPrice = useSelector((state) => state.category.selectedMaxPrice);\r\n    const isPriceRangeLoaded = useSelector((state) => state.category.isPriceRangeLoaded);\r\n\r\n    return {\r\n        minPrice,\r\n        maxPrice,\r\n        selectedMinPrice,\r\n        selectedMaxPrice,\r\n        isPriceRangeLoaded\r\n    };\r\n};\r\n","import { useSelector } from 'react-redux';\r\n\r\nexport const useCategoryProducts = () => {\r\n\r\n    const categoryId = useSelector((state) => state.category.categoryId);\r\n    const products = useSelector((state) => state.category.products);\r\n    const pageNumber = useSelector((state) => state.category.pageNumber);\r\n    const pageSize = useSelector((state) => state.category.pageSize);\r\n    const totalPages = useSelector((state) => state.category.totalPages);\r\n    const sortOrder = useSelector((state) => state.category.sortOrder);\r\n    const totalProducts = useSelector((state) => state.category.totalProducts);\r\n    const isLoaded = useSelector((state) => state.category.isLoaded);\r\n    const isPageReset = useSelector((state) => state.category.isPageReset);\r\n\r\n    return {\r\n        products,\r\n        pageNumber,\r\n        pageSize,\r\n        totalPages,\r\n        sortOrder,\r\n        categoryId,\r\n        totalProducts,\r\n        isLoaded,\r\n        isPageReset\r\n    };\r\n};"],"names":["_ref","productId","addToCart","useCart","_jsxs","className","onClick","children","_jsx","dispatch","useDispatch","_useSelector","useSelector","state","cart","items","totalPrice","itemCount","removeFromCart","_useCategoryPriceRang","selectedMinPrice","selectedMaxPrice","isPriceRangeLoaded","_useCategoryProducts","categoryId","pageNumber","pageSize","sortOrder","isLoaded","isPageReset","prevSortOrder","prevMinPrice","prevMaxPrice","dispatchFecthProducts","useCategoryPriceRange","useCategoryProducts","useRef","fetchProducts","minPrice","maxPrice","useEffect","current","setPageNumber","setIsPageReset","products","length","map","product","href","concat","id","src","mainImageUrl","alt","dangerouslySetInnerHTML","__html","name","description","discountedPrice","price","toLocaleString","AddToCartButton","category","totalPages","totalProducts"],"sourceRoot":""}