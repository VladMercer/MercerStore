{"version":3,"file":"745.0cf38c5bbc152d05f3a1.chunk.js","mappings":"0LA6BA,QAxBsB,WAClB,IAAMA,GAAWC,EAAAA,EAAAA,MACTC,GAAcC,EAAAA,EAAAA,KAAdD,UAOR,OACIE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mBAAkBC,SAAC,kBACnCF,EAAAA,EAAAA,MAAA,UAAQC,UAAU,cAAcG,MAAON,EAAWO,SARjC,SAACC,GACtB,IAAMC,EAAeD,EAAME,OAAOJ,MAClCR,GAASa,EAAAA,EAAAA,IAAaF,GAC1B,EAKqFL,SAAA,EACzEC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,cAAaF,SAAC,mBAC5BC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,eAAcF,SAAC,oBAC7BC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,gBAAeF,SAAC,uBAC9BC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,iBAAgBF,SAAC,qBAC/BC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,YAAWF,SAAC,8BAC1BC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,aAAYF,SAAC,4BAI3C,C,gDCzBaH,EAAY,WAerB,MAAO,CACHW,QAbWC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUH,MAAM,IAcxDI,YAbeH,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUC,UAAU,IAchEC,UAbaJ,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUE,QAAQ,IAc5DC,YAbeL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUG,UAAU,IAchElB,WAbca,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUf,SAAS,IAc9DmB,aAbgBN,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUI,WAAW,IAclEC,UAbaP,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUK,QAAQ,IAc5DC,aAbgBR,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUM,WAAW,IAclEC,kBAbqBT,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUO,gBAAgB,IAc5EC,cAbiBV,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUQ,YAAY,IAcpEC,OAbUX,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUS,KAAK,IAe9D,C","sources":["webpack://mercerstore/./wwwroot/features/Admin/orderPage/components/SortComponent.jsx","webpack://mercerstore/./wwwroot/features/Admin/orderPage/hooks/useOrders.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useOrders } from '../hooks/useOrders';\r\nimport { setSortOrder } from '../redux/orderPageSlice';\r\n\r\nconst SortComponent = () => {\r\n    const dispatch = useDispatch();\r\n    const { sortOrder } = useOrders();\r\n\r\n    const handleSortChange = (event) => {\r\n        const newSortOrder = event.target.value;\r\n        dispatch(setSortOrder(newSortOrder));  \r\n    };\r\n\r\n    return (\r\n        <div className=\"input-group mb-3\">\r\n            <span className=\"input-group-text\">Сортировать:</span>\r\n            <select className=\"form-select\" value={sortOrder} onChange={handleSortChange}>\r\n                <option value=\"DateTimeAsc\">сначала новые</option>\r\n                <option value=\"DateTimeDesc\">Сначала старые</option>\r\n                <option value=\"TotalPriceAsc\">Сначала недорогие</option>\r\n                <option value=\"TotalPriceDesc\">Сначала дорогие</option>\r\n                <option value=\"StatusAsc\">Сначала на рассмотрении </option>\r\n                <option value=\"StatusDesc\">Сначала Отмененные</option>\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SortComponent;","import { useSelector } from 'react-redux';\r\n\r\nexport const useOrders = () => {\r\n\r\n    \r\n    const orders = useSelector((state) => state.orderPage.orders);\r\n    const pageNumber = useSelector((state) => state.orderPage.pageNumber);\r\n    const pageSize = useSelector((state) => state.orderPage.pageSize);\r\n    const totalPages = useSelector((state) => state.orderPage.totalPages);\r\n    const sortOrder = useSelector((state) => state.orderPage.sortOrder);\r\n    const totalOrders = useSelector((state) => state.orderPage.totalOrders);\r\n    const isLoaded = useSelector((state) => state.orderPage.isLoaded);\r\n    const isPageReset = useSelector((state) => state.orderPage.isPageReset);\r\n    const timePeriodFilter = useSelector((state) => state.orderPage.timePeriodFilter);\r\n    const statusFilter = useSelector((state) => state.orderPage.statusFilter);\r\n    const query = useSelector((state) => state.orderPage.query);\r\n\r\n    return {\r\n        orders,\r\n        pageNumber,\r\n        pageSize,\r\n        totalPages,\r\n        sortOrder,\r\n        totalOrders,\r\n        isLoaded,\r\n        isPageReset,\r\n        timePeriodFilter,\r\n        statusFilter,\r\n        query\r\n    };\r\n};"],"names":["dispatch","useDispatch","sortOrder","useOrders","_jsxs","className","children","_jsx","value","onChange","event","newSortOrder","target","setSortOrder","orders","useSelector","state","orderPage","pageNumber","pageSize","totalPages","totalOrders","isLoaded","isPageReset","timePeriodFilter","statusFilter","query"],"sourceRoot":""}