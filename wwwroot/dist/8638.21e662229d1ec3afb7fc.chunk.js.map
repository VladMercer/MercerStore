{"version":3,"file":"8638.21e662229d1ec3afb7fc.chunk.js","mappings":"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","sources":["webpack://mercerstore/./wwwroot/features/reviews/components/AddReviewComponent.jsx","webpack://mercerstore/./wwwroot/features/reviews/hooks/useReviews.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useReviews } from '../hooks/useReviews';\r\nimport { addReview } from '../redux/reviewSlice';\r\nimport { notifySuccess } from '../../notify';\r\n\r\nconst AddReviewComponent = () => {\r\n    const dispatch = useDispatch();\r\n    const { productId, review, userRoles } = useReviews();\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [reviewText, setReviewText] = useState(\"\");\r\n    const [rating, setRating] = useState(1);\r\n    const modalRef = useRef(null);\r\n    const modalInstance = useRef(null);\r\n\r\n    const handleShow = () => {\r\n        if (userRoles === 'Guest') {\r\n            notifySuccess('Для оставления отзыва необходимо авторизоваться.');\r\n            return;\r\n        }\r\n        setShowModal(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        if (modalInstance.current) modalInstance.current.hide();\r\n        setShowModal(false);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const newReview = { productId, reviewText, value: rating };\r\n        dispatch(addReview(newReview));\r\n        handleClose();\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (showModal && modalRef.current) {\r\n            modalInstance.current = new window.bootstrap.Modal(modalRef.current);\r\n            modalInstance.current.show();\r\n            modalRef.current.addEventListener('hidden.bs.modal', handleClose);\r\n\r\n            return () => {\r\n                modalRef.current.removeEventListener('hidden.bs.modal', handleClose);\r\n                modalInstance.current = null;\r\n            };\r\n        }\r\n    }, [showModal]);\r\n\r\n    const hasReview = !review;\r\n\r\n    return (\r\n        <>\r\n            {hasReview && (\r\n                <div className=\"mb-3\">\r\n                    <button className=\"btn btn-outline-warning\" onClick={handleShow}>\r\n                        Оставить отзыв\r\n                    </button>\r\n                </div>\r\n            )}\r\n\r\n            {!hasReview && <p>Спасибо за отзыв!</p>}\r\n\r\n            <div className=\"modal fade\" ref={modalRef} tabIndex=\"-1\" aria-labelledby=\"modalLabel\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog modal-lg modal-dialog-centered\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"modalLabel\">Добавить отзыв</h5>\r\n                            <button type=\"button\" className=\"btn-close\" aria-label=\"Close\" onClick={handleClose}></button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form onSubmit={handleSubmit}>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"reviewText\" className=\"form-label\"><h4>Опишите впечатления</h4></label>\r\n                                    <textarea\r\n                                        id=\"reviewText\"\r\n                                        className=\"form-control\"\r\n                                        value={reviewText}\r\n                                        onChange={(e) => setReviewText(e.target.value)}\r\n                                        rows=\"3\"\r\n                                        placeholder=\"Место для отзыва\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <div className=\"add-review\">\r\n                                        <fieldset className=\"rating\">\r\n                                            <legend className=\"rating__caption\"><h4>Оцените продукт</h4></legend>\r\n                                            <div className=\"rating__group\">\r\n                                                {[5, 4, 3, 2, 1].map((rate) => (\r\n                                                    <React.Fragment key={rate}>\r\n                                                        <input\r\n                                                            type=\"radio\"\r\n                                                            id={`add-rate${rate}`}\r\n                                                            value={rate}\r\n                                                            checked={rating === rate}\r\n                                                            onChange={() => setRating(rate)}\r\n                                                            className=\"rating__star-input\"\r\n                                                        />\r\n                                                        <label htmlFor={`add-rate${rate}`} className=\"rating__star\">\r\n                                                            <i className=\"fa-solid fa-star\"></i>\r\n                                                        </label>\r\n                                                    </React.Fragment>\r\n                                                ))}\r\n                                            </div>\r\n                                        </fieldset>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer justify-content-start\">\r\n                                    <button type=\"submit\" className=\"btn btn-outline-warning\">\r\n                                        Отправить отзыв\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddReviewComponent;","import { useSelector } from 'react-redux';\r\n\r\nexport const useReviews = () => {\r\n\r\n    const productId = useSelector((state) => state.reviews.productId);\r\n    const countReviews = useSelector((state) => state.reviews.countReviews);\r\n    const productReviews = useSelector((state) => state.reviews.productReviews);\r\n    const avgReviewRate = useSelector((state) => state.reviews.avgReviewRate);\r\n    const currentUserId = useSelector((state) => state.reviews.currentUserId);\r\n    const userRoles = useSelector((state) => state.reviews.userRoles);\r\n    const review = useSelector((state) => state.reviews.review);\r\n    const isLoaded = useSelector((state) => state.reviews.isLoaded);\r\n \r\n    return {\r\n        productId,\r\n        countReviews,\r\n        productReviews,\r\n        avgReviewRate,\r\n        currentUserId,\r\n        userRoles,\r\n        isLoaded,\r\n        review,\r\n    };\r\n};\r\n\r\n\r\n\r\n"],"names":["dispatch","useDispatch","_useReviews","useReviews","productId","review","userRoles","_useState2","_slicedToArray","useState","showModal","setShowModal","_useState4","reviewText","setReviewText","_useState6","rating","setRating","modalRef","useRef","modalInstance","handleClose","current","hide","useEffect","window","bootstrap","Modal","show","addEventListener","removeEventListener","hasReview","_jsxs","_Fragment","children","_jsx","className","onClick","notifySuccess","ref","tabIndex","role","id","type","onSubmit","e","preventDefault","newReview","value","addReview","htmlFor","onChange","target","rows","placeholder","map","rate","React","concat","checked","useSelector","state","reviews","countReviews","productReviews","avgReviewRate","currentUserId","isLoaded"],"sourceRoot":""}