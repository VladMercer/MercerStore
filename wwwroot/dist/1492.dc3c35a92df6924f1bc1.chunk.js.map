{"version":3,"file":"1492.dc3c35a92df6924f1bc1.chunk.js","mappings":"4LA2BA,QAtBwB,WACpB,IAAMA,GAAWC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,KAAXD,OAOR,OACIE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mBAAkBC,SAAC,aACnCF,EAAAA,EAAAA,MAAA,UAAQC,UAAU,cAAcG,MAAON,EAAQO,SAR5B,SAACC,GACxB,IAAMC,EAAYD,EAAME,OAAOJ,MAC/BR,GAASa,EAAAA,EAAAA,IAAUF,GACvB,EAKoFL,SAAA,EACxEC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,MAAKF,SAAC,SACpBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,UAASF,SAAC,eACxBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,aAAYF,SAAC,mBAC3BC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,WAAUF,SAAC,wBAIzC,C,gDCvBaH,EAAc,WAEvB,IAAMW,GAAaC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBH,UAAU,IAY3E,MAAO,CACHI,UAZaH,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBC,QAAQ,IAanEC,YAZeJ,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBE,UAAU,IAavEC,UAZaL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBG,QAAQ,IAanEC,YAZeN,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBI,UAAU,IAavEC,WAZcP,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBK,SAAS,IAarER,WAAAA,EACAS,eAbkBR,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBM,aAAa,IAc7EC,UAbaT,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBO,QAAQ,IAcnEC,aAbgBV,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBQ,WAAW,IAczEvB,QAbWa,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBf,MAAM,IAc/DwB,YAbeX,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBS,UAAU,IAe/E,C","sources":["webpack://mercerstore/./wwwroot/features/Admin/productPage/components/FilterComponent.jsx","webpack://mercerstore/./wwwroot/features/Admin/productPage/hooks/useProducts.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useProducts } from \"../hooks/useProducts\";\r\nimport { setFilter } from \"../redux/adminProductPageSlice\";\r\n\r\nconst FilterComponent = () => {\r\n    const dispatch = useDispatch();\r\n    const { filter } = useProducts();\r\n\r\n    const handleFilterChange = (event) => {\r\n        const newFilter = event.target.value;\r\n        dispatch(setFilter(newFilter));\r\n    };\r\n\r\n    return (\r\n        <div className=\"input-group mb-3\">\r\n            <span className=\"input-group-text\">Фильтр:</span>\r\n            <select className=\"form-select\" value={filter} onChange={handleFilterChange}>\r\n                <option value=\"All\">Все</option>\r\n                <option value=\"InStock\">В наличии</option>\r\n                <option value=\"OutOfStock\">Нет в наличии</option>\r\n                <option value=\"Archived\">Снят с продажи</option>\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FilterComponent;","import { useSelector } from 'react-redux';\r\n\r\nexport const useProducts = () => {\r\n\r\n    const categoryId = useSelector((state) => state.adminProductPage.categoryId);\r\n    const products = useSelector((state) => state.adminProductPage.products);\r\n    const pageNumber = useSelector((state) => state.adminProductPage.pageNumber);\r\n    const pageSize = useSelector((state) => state.adminProductPage.pageSize);\r\n    const totalPages = useSelector((state) => state.adminProductPage.totalPages);\r\n    const sortOrder = useSelector((state) => state.adminProductPage.sortOrder);\r\n    const totalProducts = useSelector((state) => state.adminProductPage.totalProducts);\r\n    const isLoaded = useSelector((state) => state.adminProductPage.isLoaded);\r\n    const isPageReset = useSelector((state) => state.adminProductPage.isPageReset);\r\n    const filter = useSelector((state) => state.adminProductPage.filter);\r\n    const categories = useSelector((state) => state.adminProductPage.categories);\r\n\r\n    return {\r\n        products,\r\n        pageNumber,\r\n        pageSize,\r\n        totalPages,\r\n        sortOrder,\r\n        categoryId,\r\n        totalProducts,\r\n        isLoaded,\r\n        isPageReset,\r\n        filter,\r\n        categories\r\n    };\r\n};"],"names":["dispatch","useDispatch","filter","useProducts","_jsxs","className","children","_jsx","value","onChange","event","newFilter","target","setFilter","categoryId","useSelector","state","adminProductPage","products","pageNumber","pageSize","totalPages","sortOrder","totalProducts","isLoaded","isPageReset","categories"],"sourceRoot":""}