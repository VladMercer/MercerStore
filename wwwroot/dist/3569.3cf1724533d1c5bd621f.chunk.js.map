{"version":3,"file":"3569.3cf1724533d1c5bd621f.chunk.js","mappings":"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","sources":["webpack://mercerstore/./wwwroot/features/cart/components/AddToCartButton.jsx","webpack://mercerstore/./wwwroot/features/cart/hooks/useCart.jsx","webpack://mercerstore/./wwwroot/features/searchPage/components/ResultListComponent.jsx","webpack://mercerstore/./wwwroot/features/searchPage/hooks/useFetchSearchPage.jsx","webpack://mercerstore/./wwwroot/features/searchPage/hooks/useSearchPage.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nimport { useCart } from '../hooks/useCart';\r\n\r\n\r\nconst AddToCartButton = ({ productId }) => {\r\n    const { addToCart } = useCart();\r\n\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-outline-warning\"\r\n            onClick={() => addToCart(productId)}>\r\n            <i className=\"fas fa-shopping-cart\"></i> Добавить в корзину\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default AddToCartButton;","import { useSelector, useDispatch } from 'react-redux';\r\nimport { addToCart, removeFromCart } from '../redux/cartSlice';\r\n\r\nexport const useCart = () => {\r\n    const dispatch = useDispatch();\r\n    const { items, totalPrice, itemCount } = useSelector((state) => state.cart);\r\n\r\n    return {\r\n        items,\r\n        totalPrice,\r\n        itemCount,\r\n        addToCart: (productId) => dispatch(addToCart(productId)),\r\n        removeFromCart: (productId) => dispatch(removeFromCart(productId)),\r\n    };\r\n};","import React from 'react';\r\nimport AddToCartButton from '../../cart/components/AddToCartButton';\r\nimport { useSearchPage } from '../hooks/useSearchPage';\r\nimport useFetchSearchPage from '../hooks/useFetchSearchPage';\r\n\r\nconst ResultListComponent = () => {\r\n    useFetchSearchPage();\r\n    const { results } = useSearchPage();\r\n   \r\n    return (\r\n        <div className=\"row\">\r\n            {results && results.length > 0 ? (\r\n                results.map(results => (\r\n                    <div className=\"col-lg-4 col-sm-6 mb-3\" key={results.id}>\r\n                        <div className=\"product-card\">\r\n                            <div className=\"product-thumb\">\r\n                                <a href={`/product/details/${results.id}`}>\r\n                                    <img src={results.mainImageUrl} alt=\"фотокарточка\" />\r\n                                </a>\r\n                            </div>\r\n                            <div className=\"product-details\">\r\n                                <h4>\r\n                                    <a\r\n                                        href={`/product/details/${results.id}`}\r\n                                        dangerouslySetInnerHTML={{ __html: results.name }}\r\n                                    ></a>\r\n                                </h4>\r\n                                <p className=\"product-excerpt\">{results.description}</p>\r\n                                <div className=\"product-bottom-details d-flex justify-content-between\">\r\n                                    <div className=\"product-price\">{results.price}₽</div>\r\n                                    <AddToCartButton productId={results.id} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>Нет продуктов</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResultListComponent;","import { useDispatch } from 'react-redux';\r\nimport { useEffect, useRef } from 'react';\r\nimport { fetchResults, setPageNumber, setIsPageReset, setQuery } from '../redux/searchPageSlice';\r\nimport { useSearchPage } from './useSearchPage';\r\n\r\n\r\nconst useFetchSearchPage = () => {\r\n    const dispatch = useDispatch();\r\n    const { query, pageNumber, pageSize, sortOrder, isLoaded, isPageReset } = useSearchPage();\r\n\r\n    const prevSortOrder = useRef(sortOrder);\r\n    const prevPageSize = useRef(pageSize);\r\n\r\n    const dispatchFecthResults = () => {\r\n        dispatch(fetchResults({\r\n            query, sortOrder, pageNumber, pageSize\r\n        }));\r\n     \r\n    }\r\n\r\n    useEffect(() => {\r\n        const searchParams = new URLSearchParams(window.location.search);\r\n        const query = searchParams.get('query');\r\n        dispatch(setQuery(query));\r\n     \r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (query) {\r\n          \r\n            if (!isLoaded) {\r\n                dispatchFecthResults();\r\n               \r\n            }\r\n\r\n            else if (pageNumber > 1 && (sortOrder !== prevSortOrder.current ||\r\n                prevPageSize.current !== pageSize) && !isPageReset) {\r\n                dispatch(setPageNumber(1));\r\n                dispatch(setIsPageReset(true));\r\n               \r\n            }\r\n\r\n            else if (!isPageReset || (isPageReset && pageNumber === 1)) {\r\n\r\n                dispatchFecthResults();\r\n                \r\n                if (isPageReset && pageNumber === 1) {\r\n                    dispatch(setIsPageReset(false));\r\n                }\r\n            }\r\n\r\n            prevSortOrder.current = sortOrder;\r\n            prevPageSize.current = pageSize;\r\n        }\r\n\r\n    }, [query, pageNumber, pageSize, sortOrder]);\r\n};\r\n\r\nexport default useFetchSearchPage;","import { useSelector } from 'react-redux';\r\n\r\nexport const useSearchPage = () => {\r\n\r\n\r\n    const results = useSelector((state) => state.searchPage.results);\r\n    const pageNumber = useSelector((state) => state.searchPage.pageNumber);\r\n    const pageSize = useSelector((state) => state.searchPage.pageSize);\r\n    const totalPages = useSelector((state) => state.searchPage.totalPages);\r\n    const sortOrder = useSelector((state) => state.searchPage.sortOrder);\r\n    const isLoaded = useSelector((state) => state.searchPage.isLoaded);\r\n    const isPageReset = useSelector((state) => state.searchPage.isPageReset);\r\n    const query = useSelector((state) => state.searchPage.query);\r\n    const totalItems = useSelector((state) => state.searchPage.totalItems);\r\n\r\n    return {\r\n        results,\r\n        pageNumber,\r\n        pageSize,\r\n        totalPages,\r\n        sortOrder,\r\n        isLoaded,\r\n        isPageReset,\r\n        query,\r\n        totalItems\r\n        \r\n    };\r\n};"],"names":["_ref","productId","addToCart","useCart","_jsxs","className","onClick","children","_jsx","dispatch","useDispatch","_useSelector","useSelector","state","cart","items","totalPrice","itemCount","removeFromCart","_useSearchPage","query","pageNumber","pageSize","sortOrder","isLoaded","isPageReset","prevSortOrder","prevPageSize","dispatchFecthResults","useSearchPage","useRef","fetchResults","useEffect","URLSearchParams","window","location","search","get","setQuery","current","setPageNumber","setIsPageReset","results","length","map","href","concat","id","src","mainImageUrl","alt","dangerouslySetInnerHTML","__html","name","description","price","AddToCartButton","searchPage","totalPages","totalItems"],"sourceRoot":""}