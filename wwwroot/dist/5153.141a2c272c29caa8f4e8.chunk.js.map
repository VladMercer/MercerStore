{"version":3,"file":"5153.141a2c272c29caa8f4e8.chunk.js","mappings":"4LA2BA,QAtBsB,WAClB,IAAMA,GAAWC,EAAAA,EAAAA,MACTC,GAAcC,EAAAA,EAAAA,KAAdD,UAOR,OACIE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mBAAkBC,SAAC,kBACnCF,EAAAA,EAAAA,MAAA,UAAQC,UAAU,cAAcG,MAAON,EAAWO,SARjC,SAACC,GACtB,IAAMC,EAAeD,EAAME,OAAOJ,MAClCR,GAASa,EAAAA,EAAAA,IAAaF,GAC1B,EAKqFL,SAAA,EACzEC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,GAAEF,SAAC,eACjBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,YAAWF,SAAC,eAC1BC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,YAAWF,SAAC,uBAC1BC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,aAAYF,SAAC,yBAI3C,C,gDCvBaH,EAAsB,WAE/B,IAAMW,GAAaC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASH,UAAU,IAUnE,MAAO,CACHI,UAVaH,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASC,QAAQ,IAW3DC,YAVeJ,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASE,UAAU,IAW/DC,UAVaL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASG,QAAQ,IAW3DC,YAVeN,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASI,UAAU,IAW/DnB,WAVca,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASf,SAAS,IAW7DY,WAAAA,EACAQ,eAXkBP,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASK,aAAa,IAYrEC,UAXaR,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASM,QAAQ,IAY3DC,aAXgBT,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASO,WAAW,IAazE,C","sources":["webpack://mercerstore/./wwwroot/features/categoryPage/components/SortComponent.jsx","webpack://mercerstore/./wwwroot/features/categoryPage/hooks/useCategoryProducts.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useCategoryProducts } from '../hooks/useCategoryProducts';\r\nimport { setSortOrder } from '../redux/categorySlice';\r\n\r\nconst SortComponent = () => {\r\n    const dispatch = useDispatch();\r\n    const { sortOrder } = useCategoryProducts();\r\n\r\n    const handleSortChange = (event) => {\r\n        const newSortOrder = event.target.value;\r\n        dispatch(setSortOrder(newSortOrder));  \r\n    };\r\n\r\n    return (\r\n        <div className=\"input-group mb-3\">\r\n            <span className=\"input-group-text\">Сортировать:</span>\r\n            <select className=\"form-select\" value={sortOrder} onChange={handleSortChange}>\r\n                <option value=\"\">Имя (я-а)</option>\r\n                <option value=\"name_desc\">Имя (а-я)</option>\r\n                <option value=\"price_asc\">Сначала недорогие</option>\r\n                <option value=\"price_desc\">Сначала дорогие</option>\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SortComponent;","import { useSelector } from 'react-redux';\r\n\r\nexport const useCategoryProducts = () => {\r\n\r\n    const categoryId = useSelector((state) => state.category.categoryId);\r\n    const products = useSelector((state) => state.category.products);\r\n    const pageNumber = useSelector((state) => state.category.pageNumber);\r\n    const pageSize = useSelector((state) => state.category.pageSize);\r\n    const totalPages = useSelector((state) => state.category.totalPages);\r\n    const sortOrder = useSelector((state) => state.category.sortOrder);\r\n    const totalProducts = useSelector((state) => state.category.totalProducts);\r\n    const isLoaded = useSelector((state) => state.category.isLoaded);\r\n    const isPageReset = useSelector((state) => state.category.isPageReset);\r\n\r\n    return {\r\n        products,\r\n        pageNumber,\r\n        pageSize,\r\n        totalPages,\r\n        sortOrder,\r\n        categoryId,\r\n        totalProducts,\r\n        isLoaded,\r\n        isPageReset\r\n    };\r\n};"],"names":["dispatch","useDispatch","sortOrder","useCategoryProducts","_jsxs","className","children","_jsx","value","onChange","event","newSortOrder","target","setSortOrder","categoryId","useSelector","state","category","products","pageNumber","pageSize","totalPages","totalProducts","isLoaded","isPageReset"],"sourceRoot":""}