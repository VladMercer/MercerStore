{"version":3,"file":"4627.744741d2590bd8f9b2ec.chunk.js","mappings":"4LAgCA,QA3BwB,WACpB,IAAMA,GAAWC,EAAAA,EAAAA,MACTC,GAAiBC,EAAAA,EAAAA,KAAjBD,aAMR,OACIE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mBAAkBC,SAAC,aACnCF,EAAAA,EAAAA,MAAA,UAAQC,UAAU,cAAcG,MAAON,EAAcO,SAPlC,SAACC,GACxBV,GAASW,EAAAA,EAAAA,IAAUD,EAAME,OAAOJ,OACpC,EAK0FF,SAAA,EAC9EC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,MAAKF,SAAC,gBACpBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,SAAQF,SAAC,cACvBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,SAAQF,SAAC,cACvBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,SAAQF,SAAC,cACvBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,SAAQF,SAAC,cACvBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,SAAQF,SAAC,cACvBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,gBAAeF,SAAC,eAC9BC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,eAAcF,SAAC,gBAC7BC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,aAAYF,SAAC,sBAC3BC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,WAAUF,SAAC,gCAIzC,C,gDC5BaH,EAAa,WAGtB,IAAMU,GAAUC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWH,OAAO,IACzDI,GAAaH,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWC,UAAU,IAC/DC,GAAWJ,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWE,QAAQ,IAC3DC,GAAaL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWG,UAAU,IAC/DC,GAAYN,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWI,SAAS,IAC7DC,GAAeP,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWK,YAAY,IACnEC,GAAWR,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWM,QAAQ,IAC3DC,GAAcT,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWO,WAAW,IACjEC,GAAmBV,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWQ,gBAAgB,IAC3EC,GAASX,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWS,MAAM,IAG7D,MAAO,CACHC,OAHUZ,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAWU,KAAK,IAIvDb,QAAAA,EACAI,WAAAA,EACAC,SAAAA,EACAC,WAAAA,EACAC,UAAAA,EACAC,aAAAA,EACAC,SAAAA,EACAC,YAAAA,EACAC,iBAAAA,EACAC,OAAAA,EAER,C","sources":["webpack://mercerstore/./wwwroot/features/Admin/reviewPage/components/FilterComponent.jsx","webpack://mercerstore/./wwwroot/features/Admin/reviewPage/hooks/useReviews.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useReviews } from \"../hooks/useReviews\";\r\nimport { setFilter } from \"../redux/reviewPageSlice\";\r\n\r\nconst FilterComponent = () => {\r\n    const dispatch = useDispatch();\r\n    const { statusFilter } = useReviews();\r\n\r\n    const handleFilterChange = (event) => {\r\n        dispatch(setFilter(event.target.value));\r\n    };\r\n\r\n    return (\r\n        <div className=\"input-group mb-3\">\r\n            <span className=\"input-group-text\">Фильтр:</span>\r\n            <select className=\"form-select\" value={statusFilter} onChange={handleFilterChange}>\r\n                <option value=\"All\">Все отзывы</option>\r\n                <option value=\"Value1\">Оценка 1</option>\r\n                <option value=\"Value2\">Оценка 2</option>\r\n                <option value=\"Value3\">Оценка 3</option>\r\n                <option value=\"Value4\">Оценка 4</option>\r\n                <option value=\"Value5\">Оценка 5</option>\r\n                <option value=\"HasReviewText\">С текстом</option>\r\n                <option value=\"NoReviewText\">Без текста</option>\r\n                <option value=\"CreateDate\">По дате создания</option>\r\n                <option value=\"EditDate\">По дате редактирования</option>\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FilterComponent;","import { useSelector } from 'react-redux';\r\n\r\nexport const useReviews = () => {\r\n\r\n    \r\n    const reviews = useSelector((state) => state.reviewPage.reviews);\r\n    const pageNumber = useSelector((state) => state.reviewPage.pageNumber);\r\n    const pageSize = useSelector((state) => state.reviewPage.pageSize);\r\n    const totalPages = useSelector((state) => state.reviewPage.totalPages);\r\n    const sortOrder = useSelector((state) => state.reviewPage.sortOrder);\r\n    const totalReviews = useSelector((state) => state.reviewPage.totalReviews);\r\n    const isLoaded = useSelector((state) => state.reviewPage.isLoaded);\r\n    const isPageReset = useSelector((state) => state.reviewPage.isPageReset);\r\n    const timePeriodFilter = useSelector((state) => state.reviewPage.timePeriodFilter);\r\n    const filter = useSelector((state) => state.reviewPage.filter);\r\n    const query = useSelector((state) => state.reviewPage.query);\r\n\r\n    return {\r\n        query,\r\n        reviews,\r\n        pageNumber,\r\n        pageSize,\r\n        totalPages,\r\n        sortOrder,\r\n        totalReviews,\r\n        isLoaded,\r\n        isPageReset,\r\n        timePeriodFilter,\r\n        filter,\r\n    };\r\n};"],"names":["dispatch","useDispatch","statusFilter","useReviews","_jsxs","className","children","_jsx","value","onChange","event","setFilter","target","reviews","useSelector","state","reviewPage","pageNumber","pageSize","totalPages","sortOrder","totalReviews","isLoaded","isPageReset","timePeriodFilter","filter","query"],"sourceRoot":""}